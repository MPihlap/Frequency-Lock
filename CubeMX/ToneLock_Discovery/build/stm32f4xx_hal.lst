ARM GAS  /tmp/ccCYZmpt.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_MspInit:
  26              	.LFB128:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @file    stm32f4xx_hal.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @verbatim
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @endverbatim
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @attention
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
ARM GAS  /tmp/ccCYZmpt.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */ 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #include "stm32f4xx_hal.h"
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup STM32F4xx_HAL_Driver
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private define ------------------------------------------------------------*/
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Constants
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief STM32F4xx HAL Driver version number V1.7.4
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB1   (0x07U) /*!< [23:16] sub1 version */
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB2   (0x04U) /*!< [15:8]  sub2 version */
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION         ((__STM32F4xx_HAL_VERSION_MAIN << 24U)\
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB1 << 16U)\
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB2 << 8U )\
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_RC))
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  MEMRMP Register ---*/ 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of UFB_MODE bit */ 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MEMRMP_OFFSET             SYSCFG_OFFSET 
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BIT_NUMBER       SYSCFG_MEMRMP_UFB_MODE_Pos
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BB               (uint32_t)(PERIPH_BB_BASE + (MEMRMP_OFFSET * 32U) + (UFB_MODE_BIT
ARM GAS  /tmp/ccCYZmpt.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  CMPCR Register ---*/ 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of CMP_PD bit */ 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20U) 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMP_PD_BIT_NUMBER         SYSCFG_CMPCR_CMP_PD_Pos
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_CMP_PD_BB           (uint32_t)(PERIPH_BB_BASE + (CMPCR_OFFSET * 32U) + (CMP_PD_BIT_NU
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  MCHDLYCR Register ---*/ 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of BSCKSEL bit */ 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MCHDLYCR_OFFSET            (SYSCFG_OFFSET + 0x30U) 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define BSCKSEL_BIT_NUMBER         SYSCFG_MCHDLYCR_BSCKSEL_Pos
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MCHDLYCR_BSCKSEL_BB        (uint32_t)(PERIPH_BB_BASE + (MCHDLYCR_OFFSET * 32U) + (BSCKSEL_B
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private macro -------------------------------------------------------------*/
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private variables ---------------------------------------------------------*/
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Variables
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __IO uint32_t uwTick;
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private functions ---------------------------------------------------------*/
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim    
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****               ##### Initialization and Configuration functions #####
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           and the backup domain when enabled.
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) De-Initializes common part of the HAL.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           Tick interrupt priority. 
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              handled in milliseconds basis.
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
ARM GAS  /tmp/ccCYZmpt.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             ISR process will be blocked. 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         HAL function), it performs the following:
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configure the Flash prefetch, instruction and Data caches.
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Set NVIC Group Priority to 4.
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           "stm32f4xx_hal_msp.c" to do the global low level hardware initialization 
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *            
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         to have correct HAL operation.
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (INSTRUCTION_CACHE_ENABLE != 0U)
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (DATA_CACHE_ENABLE != 0U)
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_DATA_CACHE_ENABLE();
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* DATA_CACHE_ENABLE */
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* PREFETCH_ENABLE */
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Set Interrupt Group Priority */
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Init the low level hardware */
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspInit();
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
ARM GAS  /tmp/ccCYZmpt.s 			page 5


 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         This function is optional.   
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* De-Init the low level hardware */
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspDeInit();
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Initialize the MSP.
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspInit(void)
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  28              		.loc 1 236 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
  33              		.loc 1 240 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE128:
  38              		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_MspDeInit
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HAL_MspDeInit:
  47              	.LFB153:
  48              		.cfi_startproc
ARM GAS  /tmp/ccCYZmpt.s 			page 6


  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE153:
  56              		.section	.text.HAL_DeInit,"ax",%progbits
  57              		.align	1
  58              		.global	HAL_DeInit
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv4-sp-d16
  64              	HAL_DeInit:
  65              	.LFB127:
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 207 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
  70              		.loc 1 207 0
  71 0000 10B5     		push	{r4, lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 4, -8
  75              		.cfi_offset 14, -4
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  76              		.loc 1 209 0
  77 0002 094B     		ldr	r3, .L4
  78 0004 4FF0FF32 		mov	r2, #-1
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  79              		.loc 1 210 0
  80 0008 0024     		movs	r4, #0
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  81              		.loc 1 209 0
  82 000a 1A62     		str	r2, [r3, #32]
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  83              		.loc 1 210 0
  84 000c 1C62     		str	r4, [r3, #32]
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  85              		.loc 1 212 0
  86 000e 5A62     		str	r2, [r3, #36]
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  87              		.loc 1 213 0
  88 0010 5C62     		str	r4, [r3, #36]
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  89              		.loc 1 215 0
  90 0012 1A61     		str	r2, [r3, #16]
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  91              		.loc 1 216 0
  92 0014 1C61     		str	r4, [r3, #16]
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  93              		.loc 1 218 0
  94 0016 5A61     		str	r2, [r3, #20]
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  95              		.loc 1 219 0
ARM GAS  /tmp/ccCYZmpt.s 			page 7


  96 0018 5C61     		str	r4, [r3, #20]
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  97              		.loc 1 221 0
  98 001a 9A61     		str	r2, [r3, #24]
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  99              		.loc 1 222 0
 100 001c 9C61     		str	r4, [r3, #24]
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     
 101              		.loc 1 225 0
 102 001e FFF7FEFF 		bl	HAL_MspDeInit
 103              	.LVL0:
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 104              		.loc 1 229 0
 105 0022 2046     		mov	r0, r4
 106 0024 10BD     		pop	{r4, pc}
 107              	.L5:
 108 0026 00BF     		.align	2
 109              	.L4:
 110 0028 00380240 		.word	1073887232
 111              		.cfi_endproc
 112              	.LFE127:
 114              		.section	.text.HAL_InitTick,"ax",%progbits
 115              		.align	1
 116              		.weak	HAL_InitTick
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv4-sp-d16
 122              	HAL_InitTick:
 123              	.LFB130:
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  DeInitializes the MSP.
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspDeInit(void)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */ 
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function configures the source of the time base.
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        Tick interrupt priority.
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementation  in user file.
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
ARM GAS  /tmp/ccCYZmpt.s 			page 8


 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 124              		.loc 1 270 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              	.LVL1:
 129 0000 38B5     		push	{r3, r4, r5, lr}
 130              	.LCFI1:
 131              		.cfi_def_cfa_offset 16
 132              		.cfi_offset 3, -16
 133              		.cfi_offset 4, -12
 134              		.cfi_offset 5, -8
 135              		.cfi_offset 14, -4
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 136              		.loc 1 272 0
 137 0002 0E4A     		ldr	r2, .L10
 138 0004 0E4B     		ldr	r3, .L10+4
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 139              		.loc 1 270 0
 140 0006 0546     		mov	r5, r0
 141              		.loc 1 272 0
 142 0008 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 143              	.LVL2:
 144 000a 4FF47A73 		mov	r3, #1000
 145 000e B3FBF0F3 		udiv	r3, r3, r0
 146 0012 1068     		ldr	r0, [r2]
 147 0014 B0FBF3F0 		udiv	r0, r0, r3
 148 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 149              	.LVL3:
 150 001c 0446     		mov	r4, r0
 151 001e 58B9     		cbnz	r0, .L9
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     return HAL_ERROR;
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure the SysTick IRQ priority */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 152              		.loc 1 278 0
 153 0020 0F2D     		cmp	r5, #15
 154 0022 09D8     		bhi	.L9
 155              	.LVL4:
 156              	.LBB4:
 157              	.LBB5:
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 158              		.loc 1 280 0
 159 0024 0246     		mov	r2, r0
 160 0026 2946     		mov	r1, r5
 161 0028 4FF0FF30 		mov	r0, #-1
 162 002c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 163              	.LVL5:
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     uwTickPrio = TickPriority;
 164              		.loc 1 281 0
 165 0030 044B     		ldr	r3, .L10+8
ARM GAS  /tmp/ccCYZmpt.s 			page 9


 166 0032 2046     		mov	r0, r4
 167 0034 1D60     		str	r5, [r3]
 168              	.LVL6:
 169              	.L7:
 170              	.LBE5:
 171              	.LBE4:
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   else
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     return HAL_ERROR;
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 172              		.loc 1 290 0
 173 0036 38BD     		pop	{r3, r4, r5, pc}
 174              	.LVL7:
 175              	.L9:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 176              		.loc 1 274 0
 177 0038 0120     		movs	r0, #1
 178 003a FCE7     		b	.L7
 179              	.L11:
 180              		.align	2
 181              	.L10:
 182 003c 00000000 		.word	SystemCoreClock
 183 0040 00000000 		.word	.LANCHOR0
 184 0044 00000000 		.word	.LANCHOR1
 185              		.cfi_endproc
 186              	.LFE130:
 188              		.section	.text.HAL_Init,"ax",%progbits
 189              		.align	1
 190              		.global	HAL_Init
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	HAL_Init:
 197              	.LFB126:
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 198              		.loc 1 174 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 08B5     		push	{r3, lr}
 203              	.LCFI2:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 207              		.loc 1 177 0
 208 0002 0B4B     		ldr	r3, .L13
 209 0004 1A68     		ldr	r2, [r3]
 210 0006 42F40072 		orr	r2, r2, #512
 211 000a 1A60     		str	r2, [r3]
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* DATA_CACHE_ENABLE */
ARM GAS  /tmp/ccCYZmpt.s 			page 10


 212              		.loc 1 181 0
 213 000c 1A68     		ldr	r2, [r3]
 214 000e 42F48062 		orr	r2, r2, #1024
 215 0012 1A60     		str	r2, [r3]
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* PREFETCH_ENABLE */
 216              		.loc 1 185 0
 217 0014 1A68     		ldr	r2, [r3]
 218 0016 42F48072 		orr	r2, r2, #256
 219 001a 1A60     		str	r2, [r3]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 220              		.loc 1 189 0
 221 001c 0320     		movs	r0, #3
 222 001e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 223              	.LVL8:
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 224              		.loc 1 192 0
 225 0022 0020     		movs	r0, #0
 226 0024 FFF7FEFF 		bl	HAL_InitTick
 227              	.LVL9:
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 228              		.loc 1 195 0
 229 0028 FFF7FEFF 		bl	HAL_MspInit
 230              	.LVL10:
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 231              		.loc 1 199 0
 232 002c 0020     		movs	r0, #0
 233 002e 08BD     		pop	{r3, pc}
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0030 003C0240 		.word	1073888256
 238              		.cfi_endproc
 239              	.LFE126:
 241              		.section	.text.HAL_IncTick,"ax",%progbits
 242              		.align	1
 243              		.weak	HAL_IncTick
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	HAL_IncTick:
 250              	.LFB131:
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    HAL Control functions
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                       ##### HAL Control functions #####
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a tick value in millisecond
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a blocking delay in millisecond
ARM GAS  /tmp/ccCYZmpt.s 			page 11


 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Suspend the time base source interrupt
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Resume the time base source interrupt
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the HAL API driver version
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device identifier
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device revision identifier
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        used as application time base.
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       in SysTick ISR.
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      implementations in user file.
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_IncTick(void)
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 251              		.loc 1 329 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uwTick += uwTickFreq;
 256              		.loc 1 330 0
 257 0000 034A     		ldr	r2, .L16
 258 0002 044B     		ldr	r3, .L16+4
 259 0004 1168     		ldr	r1, [r2]
 260 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 261 0008 0B44     		add	r3, r3, r1
 262 000a 1360     		str	r3, [r2]
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 263              		.loc 1 331 0
 264 000c 7047     		bx	lr
 265              	.L17:
 266 000e 00BF     		.align	2
 267              	.L16:
 268 0010 00000000 		.word	uwTick
 269 0014 00000000 		.word	.LANCHOR0
 270              		.cfi_endproc
 271              	.LFE131:
 273              		.section	.text.HAL_GetTick,"ax",%progbits
 274              		.align	1
 275              		.weak	HAL_GetTick
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	HAL_GetTick:
 282              	.LFB132:
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
ARM GAS  /tmp/ccCYZmpt.s 			page 12


 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Provides a tick value in millisecond.
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick value
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 283              		.loc 1 340 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTick;
 288              		.loc 1 341 0
 289 0000 014B     		ldr	r3, .L19
 290 0002 1868     		ldr	r0, [r3]
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 291              		.loc 1 342 0
 292 0004 7047     		bx	lr
 293              	.L20:
 294 0006 00BF     		.align	2
 295              	.L19:
 296 0008 00000000 		.word	uwTick
 297              		.cfi_endproc
 298              	.LFE132:
 300              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 301              		.align	1
 302              		.global	HAL_GetTickPrio
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	HAL_GetTickPrio:
 309              	.LFB133:
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function returns a tick priority.
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick priority
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 310              		.loc 1 349 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTickPrio;
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 315              		.loc 1 351 0
 316 0000 014B     		ldr	r3, .L22
 317 0002 1868     		ldr	r0, [r3]
 318 0004 7047     		bx	lr
 319              	.L23:
 320 0006 00BF     		.align	2
 321              	.L22:
 322 0008 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccCYZmpt.s 			page 13


 323              		.cfi_endproc
 324              	.LFE133:
 326              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 327              		.align	1
 328              		.global	HAL_SetTickFreq
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu fpv4-sp-d16
 334              	HAL_SetTickFreq:
 335              	.LFB134:
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Set new tick Freq.
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Status
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 336              		.loc 1 358 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              	.LVL11:
 341 0000 08B5     		push	{r3, lr}
 342              	.LCFI3:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 3, -8
 345              		.cfi_offset 14, -4
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (uwTickFreq != Freq)
 346              		.loc 1 362 0
 347 0002 064B     		ldr	r3, .L27
 348 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 349 0006 8242     		cmp	r2, r0
 350 0008 05D0     		beq	.L26
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     uwTickFreq = Freq;
 351              		.loc 1 364 0
 352 000a 1870     		strb	r0, [r3]
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     /* Apply the new tick Freq  */
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 353              		.loc 1 367 0
 354 000c 044B     		ldr	r3, .L27+4
 355 000e 1868     		ldr	r0, [r3]
 356              	.LVL12:
 357 0010 FFF7FEFF 		bl	HAL_InitTick
 358              	.LVL13:
 359              	.L25:
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return status;
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 360              		.loc 1 371 0
 361 0014 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccCYZmpt.s 			page 14


 362              	.LVL14:
 363              	.L26:
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 364              		.loc 1 359 0
 365 0016 0020     		movs	r0, #0
 366              	.LVL15:
 367 0018 FCE7     		b	.L25
 368              	.L28:
 369 001a 00BF     		.align	2
 370              	.L27:
 371 001c 00000000 		.word	.LANCHOR0
 372 0020 00000000 		.word	.LANCHOR1
 373              		.cfi_endproc
 374              	.LFE134:
 376              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 377              		.align	1
 378              		.global	HAL_GetTickFreq
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv4-sp-d16
 384              	HAL_GetTickFreq:
 385              	.LFB135:
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Return tick frequency.
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick period in Hz
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 386              		.loc 1 378 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTickFreq;
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 391              		.loc 1 380 0
 392 0000 014B     		ldr	r3, .L30
 393 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 394 0004 7047     		bx	lr
 395              	.L31:
 396 0006 00BF     		.align	2
 397              	.L30:
 398 0008 00000000 		.word	.LANCHOR0
 399              		.cfi_endproc
 400              	.LFE135:
 402              		.section	.text.HAL_Delay,"ax",%progbits
 403              		.align	1
 404              		.weak	HAL_Delay
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	HAL_Delay:
 411              	.LFB136:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
ARM GAS  /tmp/ccCYZmpt.s 			page 15


 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        on variable incremented.
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is incremented.
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 412              		.loc 1 394 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL16:
 417 0000 38B5     		push	{r3, r4, r5, lr}
 418              	.LCFI4:
 419              		.cfi_def_cfa_offset 16
 420              		.cfi_offset 3, -16
 421              		.cfi_offset 4, -12
 422              		.cfi_offset 5, -8
 423              		.cfi_offset 14, -4
 424              		.loc 1 394 0
 425 0002 0446     		mov	r4, r0
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 426              		.loc 1 395 0
 427 0004 FFF7FEFF 		bl	HAL_GetTick
 428              	.LVL17:
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t wait = Delay;
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 429              		.loc 1 399 0
 430 0008 631C     		adds	r3, r4, #1
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 431              		.loc 1 401 0
 432 000a 1CBF     		itt	ne
 433 000c 054B     		ldrne	r3, .L39
 434 000e 1B78     		ldrbne	r3, [r3]	@ zero_extendqisi2
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t wait = Delay;
 435              		.loc 1 395 0
 436 0010 0546     		mov	r5, r0
 437              	.LVL18:
 438              		.loc 1 401 0
 439 0012 18BF     		it	ne
 440 0014 E418     		addne	r4, r4, r3
 441              	.LVL19:
 442              	.L34:
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 443              		.loc 1 404 0 discriminator 1
 444 0016 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccCYZmpt.s 			page 16


 445              	.LVL20:
 446 001a 401B     		subs	r0, r0, r5
 447 001c A042     		cmp	r0, r4
 448 001e FAD3     		bcc	.L34
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 449              		.loc 1 407 0
 450 0020 38BD     		pop	{r3, r4, r5, pc}
 451              	.LVL21:
 452              	.L40:
 453 0022 00BF     		.align	2
 454              	.L39:
 455 0024 00000000 		.word	.LANCHOR0
 456              		.cfi_endproc
 457              	.LFE136:
 459              		.section	.text.HAL_SuspendTick,"ax",%progbits
 460              		.align	1
 461              		.weak	HAL_SuspendTick
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 465              		.fpu fpv4-sp-d16
 467              	HAL_SuspendTick:
 468              	.LFB137:
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Suspend Tick increment.
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is suspended.
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_SuspendTick(void)
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 469              		.loc 1 420 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Disable SysTick Interrupt */
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 474              		.loc 1 422 0
 475 0000 024A     		ldr	r2, .L42
 476 0002 1368     		ldr	r3, [r2]
 477 0004 23F00203 		bic	r3, r3, #2
 478 0008 1360     		str	r3, [r2]
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 479              		.loc 1 423 0
 480 000a 7047     		bx	lr
 481              	.L43:
 482              		.align	2
 483              	.L42:
 484 000c 10E000E0 		.word	-536813552
ARM GAS  /tmp/ccCYZmpt.s 			page 17


 485              		.cfi_endproc
 486              	.LFE137:
 488              		.section	.text.HAL_ResumeTick,"ax",%progbits
 489              		.align	1
 490              		.weak	HAL_ResumeTick
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv4-sp-d16
 496              	HAL_ResumeTick:
 497              	.LFB138:
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Resume Tick increment.
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is resumed.
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_ResumeTick(void)
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 498              		.loc 1 436 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Enable SysTick Interrupt */
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 503              		.loc 1 438 0
 504 0000 024A     		ldr	r2, .L45
 505 0002 1368     		ldr	r3, [r2]
 506 0004 43F00203 		orr	r3, r3, #2
 507 0008 1360     		str	r3, [r2]
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 508              		.loc 1 439 0
 509 000a 7047     		bx	lr
 510              	.L46:
 511              		.align	2
 512              	.L45:
 513 000c 10E000E0 		.word	-536813552
 514              		.cfi_endproc
 515              	.LFE138:
 517              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 518              		.align	1
 519              		.global	HAL_GetHalVersion
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv4-sp-d16
 525              	HAL_GetHalVersion:
 526              	.LFB139:
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the HAL revision
ARM GAS  /tmp/ccCYZmpt.s 			page 18


 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 527              		.loc 1 446 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return __STM32F4xx_HAL_VERSION;
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 532              		.loc 1 448 0
 533 0000 0048     		ldr	r0, .L48
 534 0002 7047     		bx	lr
 535              	.L49:
 536              		.align	2
 537              	.L48:
 538 0004 00040701 		.word	17236992
 539              		.cfi_endproc
 540              	.LFE139:
 542              		.section	.text.HAL_GetREVID,"ax",%progbits
 543              		.align	1
 544              		.global	HAL_GetREVID
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	HAL_GetREVID:
 551              	.LFB140:
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device revision identifier.
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device revision identifier
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetREVID(void)
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 552              		.loc 1 455 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 557              		.loc 1 456 0
 558 0000 014B     		ldr	r3, .L51
 559 0002 1868     		ldr	r0, [r3]
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 560              		.loc 1 457 0
 561 0004 000C     		lsrs	r0, r0, #16
 562 0006 7047     		bx	lr
 563              	.L52:
 564              		.align	2
 565              	.L51:
 566 0008 002004E0 		.word	-536600576
 567              		.cfi_endproc
 568              	.LFE140:
 570              		.section	.text.HAL_GetDEVID,"ax",%progbits
 571              		.align	1
ARM GAS  /tmp/ccCYZmpt.s 			page 19


 572              		.global	HAL_GetDEVID
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	HAL_GetDEVID:
 579              	.LFB141:
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device identifier.
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetDEVID(void)
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 580              		.loc 1 464 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 585              		.loc 1 465 0
 586 0000 024B     		ldr	r3, .L54
 587 0002 1868     		ldr	r0, [r3]
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 588              		.loc 1 466 0
 589 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 590 0008 7047     		bx	lr
 591              	.L55:
 592 000a 00BF     		.align	2
 593              	.L54:
 594 000c 002004E0 		.word	-536600576
 595              		.cfi_endproc
 596              	.LFE141:
 598              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 599              		.align	1
 600              		.global	HAL_DBGMCU_EnableDBGSleepMode
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 604              		.fpu fpv4-sp-d16
 606              	HAL_DBGMCU_EnableDBGSleepMode:
 607              	.LFB142:
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 608              		.loc 1 473 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 613              		.loc 1 474 0
 614 0000 024A     		ldr	r2, .L57
ARM GAS  /tmp/ccCYZmpt.s 			page 20


 615 0002 5368     		ldr	r3, [r2, #4]
 616 0004 43F00103 		orr	r3, r3, #1
 617 0008 5360     		str	r3, [r2, #4]
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 618              		.loc 1 475 0
 619 000a 7047     		bx	lr
 620              	.L58:
 621              		.align	2
 622              	.L57:
 623 000c 002004E0 		.word	-536600576
 624              		.cfi_endproc
 625              	.LFE142:
 627              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 628              		.align	1
 629              		.global	HAL_DBGMCU_DisableDBGSleepMode
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv4-sp-d16
 635              	HAL_DBGMCU_DisableDBGSleepMode:
 636              	.LFB143:
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 637              		.loc 1 482 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 642              		.loc 1 483 0
 643 0000 024A     		ldr	r2, .L60
 644 0002 5368     		ldr	r3, [r2, #4]
 645 0004 23F00103 		bic	r3, r3, #1
 646 0008 5360     		str	r3, [r2, #4]
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 647              		.loc 1 484 0
 648 000a 7047     		bx	lr
 649              	.L61:
 650              		.align	2
 651              	.L60:
 652 000c 002004E0 		.word	-536600576
 653              		.cfi_endproc
 654              	.LFE143:
 656              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 657              		.align	1
 658              		.global	HAL_DBGMCU_EnableDBGStopMode
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv4-sp-d16
 664              	HAL_DBGMCU_EnableDBGStopMode:
 665              	.LFB144:
ARM GAS  /tmp/ccCYZmpt.s 			page 21


 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 666              		.loc 1 491 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 671              		.loc 1 492 0
 672 0000 024A     		ldr	r2, .L63
 673 0002 5368     		ldr	r3, [r2, #4]
 674 0004 43F00203 		orr	r3, r3, #2
 675 0008 5360     		str	r3, [r2, #4]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 676              		.loc 1 493 0
 677 000a 7047     		bx	lr
 678              	.L64:
 679              		.align	2
 680              	.L63:
 681 000c 002004E0 		.word	-536600576
 682              		.cfi_endproc
 683              	.LFE144:
 685              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 686              		.align	1
 687              		.global	HAL_DBGMCU_DisableDBGStopMode
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	HAL_DBGMCU_DisableDBGStopMode:
 694              	.LFB145:
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 695              		.loc 1 500 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 700              		.loc 1 501 0
 701 0000 024A     		ldr	r2, .L66
 702 0002 5368     		ldr	r3, [r2, #4]
 703 0004 23F00203 		bic	r3, r3, #2
 704 0008 5360     		str	r3, [r2, #4]
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 705              		.loc 1 502 0
 706 000a 7047     		bx	lr
ARM GAS  /tmp/ccCYZmpt.s 			page 22


 707              	.L67:
 708              		.align	2
 709              	.L66:
 710 000c 002004E0 		.word	-536600576
 711              		.cfi_endproc
 712              	.LFE145:
 714              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 715              		.align	1
 716              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu fpv4-sp-d16
 722              	HAL_DBGMCU_EnableDBGStandbyMode:
 723              	.LFB146:
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 724              		.loc 1 509 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 729              		.loc 1 510 0
 730 0000 024A     		ldr	r2, .L69
 731 0002 5368     		ldr	r3, [r2, #4]
 732 0004 43F00403 		orr	r3, r3, #4
 733 0008 5360     		str	r3, [r2, #4]
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 734              		.loc 1 511 0
 735 000a 7047     		bx	lr
 736              	.L70:
 737              		.align	2
 738              	.L69:
 739 000c 002004E0 		.word	-536600576
 740              		.cfi_endproc
 741              	.LFE146:
 743              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 744              		.align	1
 745              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
 749              		.fpu fpv4-sp-d16
 751              	HAL_DBGMCU_DisableDBGStandbyMode:
 752              	.LFB147:
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
ARM GAS  /tmp/ccCYZmpt.s 			page 23


 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 753              		.loc 1 518 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 758              		.loc 1 519 0
 759 0000 024A     		ldr	r2, .L72
 760 0002 5368     		ldr	r3, [r2, #4]
 761 0004 23F00403 		bic	r3, r3, #4
 762 0008 5360     		str	r3, [r2, #4]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 763              		.loc 1 520 0
 764 000a 7047     		bx	lr
 765              	.L73:
 766              		.align	2
 767              	.L72:
 768 000c 002004E0 		.word	-536600576
 769              		.cfi_endproc
 770              	.LFE147:
 772              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_EnableCompensationCell
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	HAL_EnableCompensationCell:
 781              	.LFB148:
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_EnableCompensationCell(void)
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 782              		.loc 1 529 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)ENABLE;
 787              		.loc 1 530 0
 788 0000 014B     		ldr	r3, .L75
 789 0002 0122     		movs	r2, #1
 790 0004 1A60     		str	r2, [r3]
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 791              		.loc 1 531 0
 792 0006 7047     		bx	lr
 793              	.L76:
 794              		.align	2
 795              	.L75:
 796 0008 00042742 		.word	1109853184
 797              		.cfi_endproc
ARM GAS  /tmp/ccCYZmpt.s 			page 24


 798              	.LFE148:
 800              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 801              		.align	1
 802              		.global	HAL_DisableCompensationCell
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	HAL_DisableCompensationCell:
 809              	.LFB149:
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DisableCompensationCell(void)
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 810              		.loc 1 540 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)DISABLE;
 815              		.loc 1 541 0
 816 0000 014B     		ldr	r3, .L78
 817 0002 0022     		movs	r2, #0
 818 0004 1A60     		str	r2, [r3]
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 819              		.loc 1 542 0
 820 0006 7047     		bx	lr
 821              	.L79:
 822              		.align	2
 823              	.L78:
 824 0008 00042742 		.word	1109853184
 825              		.cfi_endproc
 826              	.LFE149:
 828              		.section	.text.HAL_GetUID,"ax",%progbits
 829              		.align	1
 830              		.global	HAL_GetUID
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 834              		.fpu fpv4-sp-d16
 836              	HAL_GetUID:
 837              	.LFB150:
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param UID pointer to 3 words array.
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 838              		.loc 1 550 0
 839              		.cfi_startproc
ARM GAS  /tmp/ccCYZmpt.s 			page 25


 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 843              	.LVL22:
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 844              		.loc 1 551 0
 845 0000 044B     		ldr	r3, .L81
 846 0002 1B68     		ldr	r3, [r3]
 847 0004 0360     		str	r3, [r0]
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 848              		.loc 1 552 0
 849 0006 044B     		ldr	r3, .L81+4
 850 0008 1B68     		ldr	r3, [r3]
 851 000a 4360     		str	r3, [r0, #4]
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 852              		.loc 1 553 0
 853 000c 034B     		ldr	r3, .L81+8
 854 000e 1B68     		ldr	r3, [r3]
 855 0010 8360     		str	r3, [r0, #8]
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 856              		.loc 1 554 0
 857 0012 7047     		bx	lr
 858              	.L82:
 859              		.align	2
 860              	.L81:
 861 0014 107AFF1F 		.word	536836624
 862 0018 147AFF1F 		.word	536836628
 863 001c 187AFF1F 		.word	536836632
 864              		.cfi_endproc
 865              	.LFE150:
 867              		.global	uwTickFreq
 868              		.global	uwTickPrio
 869              		.comm	uwTick,4,4
 870              		.section	.data.uwTickFreq,"aw",%progbits
 871              		.set	.LANCHOR0,. + 0
 874              	uwTickFreq:
 875 0000 01       		.byte	1
 876              		.section	.data.uwTickPrio,"aw",%progbits
 877              		.align	2
 878              		.set	.LANCHOR1,. + 0
 881              	uwTickPrio:
 882 0000 10000000 		.word	16
 883              		.text
 884              	.Letext0:
 885              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 886              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 887              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 888              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 889              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 890              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 891              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 892              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 893              		.file 10 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 894              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 895              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 896              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 897              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccCYZmpt.s 			page 26


ARM GAS  /tmp/ccCYZmpt.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal.c
     /tmp/ccCYZmpt.s:18     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccCYZmpt.s:25     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccCYZmpt.s:39     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccCYZmpt.s:46     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccCYZmpt.s:57     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccCYZmpt.s:64     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccCYZmpt.s:110    .text.HAL_DeInit:0000000000000028 $d
     /tmp/ccCYZmpt.s:115    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccCYZmpt.s:122    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccCYZmpt.s:182    .text.HAL_InitTick:000000000000003c $d
     /tmp/ccCYZmpt.s:189    .text.HAL_Init:0000000000000000 $t
     /tmp/ccCYZmpt.s:196    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccCYZmpt.s:237    .text.HAL_Init:0000000000000030 $d
     /tmp/ccCYZmpt.s:242    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccCYZmpt.s:249    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccCYZmpt.s:268    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccCYZmpt.s:274    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccCYZmpt.s:281    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccCYZmpt.s:296    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccCYZmpt.s:301    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccCYZmpt.s:308    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccCYZmpt.s:322    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccCYZmpt.s:327    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccCYZmpt.s:334    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccCYZmpt.s:371    .text.HAL_SetTickFreq:000000000000001c $d
     /tmp/ccCYZmpt.s:377    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccCYZmpt.s:384    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccCYZmpt.s:398    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccCYZmpt.s:403    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccCYZmpt.s:410    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccCYZmpt.s:455    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccCYZmpt.s:460    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccCYZmpt.s:467    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccCYZmpt.s:484    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccCYZmpt.s:489    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccCYZmpt.s:496    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccCYZmpt.s:513    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccCYZmpt.s:518    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccCYZmpt.s:525    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccCYZmpt.s:538    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccCYZmpt.s:543    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccCYZmpt.s:550    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccCYZmpt.s:566    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccCYZmpt.s:571    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccCYZmpt.s:578    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccCYZmpt.s:594    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccCYZmpt.s:599    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccCYZmpt.s:606    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccCYZmpt.s:623    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccCYZmpt.s:628    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccCYZmpt.s:635    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccCYZmpt.s:652    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccCYZmpt.s:657    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccCYZmpt.s:664    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
ARM GAS  /tmp/ccCYZmpt.s 			page 28


     /tmp/ccCYZmpt.s:681    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccCYZmpt.s:686    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccCYZmpt.s:693    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccCYZmpt.s:710    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccCYZmpt.s:715    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccCYZmpt.s:722    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccCYZmpt.s:739    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccCYZmpt.s:744    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccCYZmpt.s:751    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccCYZmpt.s:768    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccCYZmpt.s:773    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccCYZmpt.s:780    .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccCYZmpt.s:796    .text.HAL_EnableCompensationCell:0000000000000008 $d
     /tmp/ccCYZmpt.s:801    .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccCYZmpt.s:808    .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccCYZmpt.s:824    .text.HAL_DisableCompensationCell:0000000000000008 $d
     /tmp/ccCYZmpt.s:829    .text.HAL_GetUID:0000000000000000 $t
     /tmp/ccCYZmpt.s:836    .text.HAL_GetUID:0000000000000000 HAL_GetUID
     /tmp/ccCYZmpt.s:861    .text.HAL_GetUID:0000000000000014 $d
     /tmp/ccCYZmpt.s:874    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccCYZmpt.s:881    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccCYZmpt.s:877    .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
