ARM GAS  /tmp/ccalorCm.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB132:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
ARM GAS  /tmp/ccalorCm.s 			page 2


  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f4xx_hal.h"
  52:Src/main.c    **** #include "pdm2pcm.h"
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END Includes */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** CRC_HandleTypeDef hcrc;
  60:Src/main.c    **** 
  61:Src/main.c    **** I2S_HandleTypeDef hi2s2;
  62:Src/main.c    **** 
  63:Src/main.c    **** SPI_HandleTypeDef hspi1;
  64:Src/main.c    **** 
  65:Src/main.c    **** UART_HandleTypeDef huart2;
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN PV */
  68:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END PV */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** void SystemClock_Config(void);
  74:Src/main.c    **** static void MX_GPIO_Init(void);
  75:Src/main.c    **** static void MX_SPI1_Init(void);
  76:Src/main.c    **** static void MX_USART2_UART_Init(void);
  77:Src/main.c    **** static void MX_I2S2_Init(void);
  78:Src/main.c    **** static void MX_CRC_Init(void);
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE BEGIN PFP */
  81:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  82:Src/main.c    **** // static void SPI2_NVIC_INIT(void);
  83:Src/main.c    **** /* USER CODE END PFP */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE BEGIN 0 */
  86:Src/main.c    **** uint16_t dataBuffer[1024];
  87:Src/main.c    **** /* USER CODE END 0 */
  88:Src/main.c    **** 
  89:Src/main.c    **** /**
ARM GAS  /tmp/ccalorCm.s 			page 3


  90:Src/main.c    ****   * @brief  The application entry point.
  91:Src/main.c    ****   *
  92:Src/main.c    ****   * @retval None
  93:Src/main.c    ****   */
  94:Src/main.c    **** int main(void)
  95:Src/main.c    **** {
  96:Src/main.c    ****   /* USER CODE BEGIN 1 */
  97:Src/main.c    ****   //__HAL_DBGMCU_UNFREEZE_IWDG();
  98:Src/main.c    ****   /* USER CODE END 1 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Src/main.c    ****   HAL_Init();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN Init */
 106:Src/main.c    ****   /* USER CODE END Init */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Configure the system clock */
 109:Src/main.c    ****   SystemClock_Config();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END SysInit */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Initialize all configured peripherals */
 116:Src/main.c    ****   MX_GPIO_Init();
 117:Src/main.c    ****   MX_SPI1_Init();
 118:Src/main.c    ****   MX_USART2_UART_Init();
 119:Src/main.c    ****   MX_I2S2_Init();
 120:Src/main.c    ****   MX_CRC_Init();
 121:Src/main.c    ****   MX_PDM2PCM_Init();
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 123:Src/main.c    ****   /* USER CODE END 2 */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* Infinite loop */
 126:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 127:Src/main.c    ****   uint8_t dbuffer[] = "ayy lmao\n";
 128:Src/main.c    ****   //uint8_t dbuffer[] = {0xA5, 0x5A};
 129:Src/main.c    ****   uint8_t data_in[2];
 130:Src/main.c    ****   uint16_t dataOutBuffer[1024];
 131:Src/main.c    ****   uint16_t testData = 0xA55A;
 132:Src/main.c    **** 
 133:Src/main.c    ****   LOCK_ENABLE();
 134:Src/main.c    ****   // SPI2_NVIC_INIT();
 135:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, SPI1_NCS_PIN, GPIO_PIN_SET);
 136:Src/main.c    ****   HAL_I2S_Receive_IT(&hi2s2, dataBuffer, 1024);
 137:Src/main.c    ****   HAL_GPIO_WritePin(LED_PORT, LED2_PIN, GPIO_PIN_SET);
 138:Src/main.c    ****   while (1)
 139:Src/main.c    ****   {
 140:Src/main.c    ****     //HAL_UART_Transmit(&huart2, &dbuffer, 9, 1000);
 141:Src/main.c    ****     HAL_Delay(100);
 142:Src/main.c    ****     HAL_GPIO_TogglePin(LED_PORT, LED4_PIN);
 143:Src/main.c    ****     // HAL_GPIO_Wri~/E, SPI1_~/NCS_PIN, GPIO_PIN_RESET); 
 144:Src/main.c    ****     // HAL_SPI_Tran~/1, 0x0F,~/ 1, 100);
 145:Src/main.c    ****     // HAL_SPI_Rece~/, &data_in, 2, 100);
 146:Src/main.c    ****     // HAL_GPIO_Wri~/E, SPI1_NCS_PIN, GPIO_PIN_SET);
ARM GAS  /tmp/ccalorCm.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****     // HAL_I2S_Receive(&hi2s2, &dataBuffer, 1024, 100);
 149:Src/main.c    ****     //HAL_GPIO_Togg~/GPIO_Port, GPIO_PIN_15);
 150:Src/main.c    ****     //  HAL_GPIO_To~/3_GPIO_Port, LD3_Pin);
 151:Src/main.c    ****     //  HAL_GPIO_TogglePin(LD5_GPIO_Port, LD5_Pin);
 152:Src/main.c    ****     // if (result == HAL_OK) {
 153:Src/main.c    ****       // dataBuffer[0] = 0xA55A;
 154:Src/main.c    ****       // PDM_Filter(&dataBuffer, &dataOutBuffer, &PDM1_filter_handler);
 155:Src/main.c    ****     // }
 156:Src/main.c    ****     
 157:Src/main.c    **** 
 158:Src/main.c    ****   /* USER CODE END WHILE */
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* USER CODE BEGIN 3 */
 161:Src/main.c    **** 
 162:Src/main.c    ****   }
 163:Src/main.c    ****   /* USER CODE END 3 */
 164:Src/main.c    **** 
 165:Src/main.c    **** }
 166:Src/main.c    **** 
 167:Src/main.c    **** /**
 168:Src/main.c    ****   * @brief System Clock Configuration
 169:Src/main.c    ****   * @retval None
 170:Src/main.c    ****   */
 171:Src/main.c    **** void SystemClock_Config(void)
 172:Src/main.c    **** {
 173:Src/main.c    **** 
 174:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 175:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 176:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 177:Src/main.c    **** 
 178:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 179:Src/main.c    ****     */
 180:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 181:Src/main.c    **** 
 182:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 183:Src/main.c    **** 
 184:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 185:Src/main.c    ****     */
 186:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 187:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 188:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 195:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 196:Src/main.c    ****   {
 197:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 198:Src/main.c    ****   }
 199:Src/main.c    **** 
 200:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 201:Src/main.c    ****     */
 202:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 203:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccalorCm.s 			page 5


 204:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 205:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 206:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 207:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 208:Src/main.c    **** 
 209:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 210:Src/main.c    ****   {
 211:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 212:Src/main.c    ****   }
 213:Src/main.c    **** 
 214:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 215:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 216:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 217:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 218:Src/main.c    ****   {
 219:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 220:Src/main.c    ****   }
 221:Src/main.c    **** 
 222:Src/main.c    ****     /**Configure the Systick interrupt time 
 223:Src/main.c    ****     */
 224:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 225:Src/main.c    **** 
 226:Src/main.c    ****     /**Configure the Systick 
 227:Src/main.c    ****     */
 228:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 229:Src/main.c    **** 
 230:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 231:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 232:Src/main.c    **** }
 233:Src/main.c    **** 
 234:Src/main.c    **** /* CRC init function */
 235:Src/main.c    **** static void MX_CRC_Init(void)
 236:Src/main.c    **** {
 237:Src/main.c    **** 
 238:Src/main.c    ****   hcrc.Instance = CRC;
 239:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 240:Src/main.c    ****   {
 241:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 242:Src/main.c    ****   }
 243:Src/main.c    **** 
 244:Src/main.c    ****   __HAL_CRC_DR_RESET(&hcrc);
 245:Src/main.c    **** 
 246:Src/main.c    **** }
 247:Src/main.c    **** 
 248:Src/main.c    **** /* I2S2 init function */
 249:Src/main.c    **** static void MX_I2S2_Init(void)
 250:Src/main.c    **** {
 251:Src/main.c    **** 
 252:Src/main.c    ****   hi2s2.Instance = SPI2;
 253:Src/main.c    ****   hi2s2.Init.Mode = I2S_MODE_MASTER_RX;
 254:Src/main.c    ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 255:Src/main.c    ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 256:Src/main.c    ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 257:Src/main.c    ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_32K;
 258:Src/main.c    ****   hi2s2.Init.CPOL = I2S_CPOL_HIGH;
 259:Src/main.c    ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 260:Src/main.c    ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
ARM GAS  /tmp/ccalorCm.s 			page 6


 261:Src/main.c    ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 262:Src/main.c    ****   {
 263:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 264:Src/main.c    ****   }
 265:Src/main.c    **** 
 266:Src/main.c    **** }
 267:Src/main.c    **** 
 268:Src/main.c    **** /* SPI1 init function */
 269:Src/main.c    **** static void MX_SPI1_Init(void)
 270:Src/main.c    **** {
 271:Src/main.c    **** 
 272:Src/main.c    ****   /* SPI1 parameter configuration*/
 273:Src/main.c    ****   hspi1.Instance = SPI1;
 274:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 275:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 276:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 277:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 278:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 279:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 280:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 281:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 282:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 283:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 284:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 285:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 286:Src/main.c    ****   {
 287:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 288:Src/main.c    ****   }
 289:Src/main.c    **** 
 290:Src/main.c    **** }
 291:Src/main.c    **** 
 292:Src/main.c    **** /* USART2 init function */
 293:Src/main.c    **** static void MX_USART2_UART_Init(void)
 294:Src/main.c    **** {
 295:Src/main.c    **** 
 296:Src/main.c    ****   huart2.Instance = USART2;
 297:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 298:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 299:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 300:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 301:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 302:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 303:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 304:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 305:Src/main.c    ****   {
 306:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 307:Src/main.c    ****   }
 308:Src/main.c    **** 
 309:Src/main.c    **** }
 310:Src/main.c    **** 
 311:Src/main.c    **** /** Configure pins as 
 312:Src/main.c    ****         * Analog 
 313:Src/main.c    ****         * Input 
 314:Src/main.c    ****         * Output
 315:Src/main.c    ****         * EVENT_OUT
 316:Src/main.c    ****         * EXTI
 317:Src/main.c    ****      PA4   ------> I2S3_WS
ARM GAS  /tmp/ccalorCm.s 			page 7


 318:Src/main.c    **** */
 319:Src/main.c    **** static void MX_GPIO_Init(void)
 320:Src/main.c    **** {
  27              		.loc 1 320 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8CB0     		sub	sp, sp, #48
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 72
  43              	.LBB2:
 321:Src/main.c    **** 
 322:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 323:Src/main.c    **** 
 324:Src/main.c    ****   /* GPIO Ports Clock Enable */
 325:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  44              		.loc 1 325 0
  45 0006 0024     		movs	r4, #0
  46 0008 0194     		str	r4, [sp, #4]
  47 000a 454B     		ldr	r3, .L3
  48 000c 1A6B     		ldr	r2, [r3, #48]
  49 000e 42F01002 		orr	r2, r2, #16
  50 0012 1A63     		str	r2, [r3, #48]
  51 0014 1A6B     		ldr	r2, [r3, #48]
  52 0016 02F01002 		and	r2, r2, #16
  53 001a 0192     		str	r2, [sp, #4]
  54 001c 019A     		ldr	r2, [sp, #4]
  55              	.LBE2:
  56              	.LBB3:
 326:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  57              		.loc 1 326 0
  58 001e 0294     		str	r4, [sp, #8]
  59 0020 1A6B     		ldr	r2, [r3, #48]
  60 0022 42F00402 		orr	r2, r2, #4
  61 0026 1A63     		str	r2, [r3, #48]
  62 0028 1A6B     		ldr	r2, [r3, #48]
  63 002a 02F00402 		and	r2, r2, #4
  64 002e 0292     		str	r2, [sp, #8]
  65 0030 029A     		ldr	r2, [sp, #8]
  66              	.LBE3:
  67              	.LBB4:
 327:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  68              		.loc 1 327 0
  69 0032 0394     		str	r4, [sp, #12]
  70 0034 1A6B     		ldr	r2, [r3, #48]
  71 0036 42F08002 		orr	r2, r2, #128
  72 003a 1A63     		str	r2, [r3, #48]
  73 003c 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccalorCm.s 			page 8


  74 003e 02F08002 		and	r2, r2, #128
  75 0042 0392     		str	r2, [sp, #12]
  76 0044 039A     		ldr	r2, [sp, #12]
  77              	.LBE4:
  78              	.LBB5:
 328:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 328 0
  80 0046 0494     		str	r4, [sp, #16]
  81 0048 1A6B     		ldr	r2, [r3, #48]
  82 004a 42F00102 		orr	r2, r2, #1
  83 004e 1A63     		str	r2, [r3, #48]
  84 0050 1A6B     		ldr	r2, [r3, #48]
  85 0052 02F00102 		and	r2, r2, #1
  86 0056 0492     		str	r2, [sp, #16]
  87 0058 049A     		ldr	r2, [sp, #16]
  88              	.LBE5:
  89              	.LBB6:
 329:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  90              		.loc 1 329 0
  91 005a 0594     		str	r4, [sp, #20]
  92 005c 1A6B     		ldr	r2, [r3, #48]
  93 005e 42F00202 		orr	r2, r2, #2
  94 0062 1A63     		str	r2, [r3, #48]
  95 0064 1A6B     		ldr	r2, [r3, #48]
  96 0066 02F00202 		and	r2, r2, #2
  97 006a 0592     		str	r2, [sp, #20]
  98 006c 059A     		ldr	r2, [sp, #20]
  99              	.LBE6:
 100              	.LBB7:
 330:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 101              		.loc 1 330 0
 102 006e 0694     		str	r4, [sp, #24]
 103 0070 1A6B     		ldr	r2, [r3, #48]
 104 0072 42F00802 		orr	r2, r2, #8
 105 0076 1A63     		str	r2, [r3, #48]
 106 0078 1B6B     		ldr	r3, [r3, #48]
 107 007a 03F00803 		and	r3, r3, #8
 108 007e 0693     		str	r3, [sp, #24]
 109 0080 069B     		ldr	r3, [sp, #24]
 110              	.LBE7:
 331:Src/main.c    **** 
 332:Src/main.c    ****   /*Configure GPIO pin Output Level */
 333:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2|CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 111              		.loc 1 333 0
 112 0082 284E     		ldr	r6, .L3+4
 113 0084 2246     		mov	r2, r4
 114 0086 0C21     		movs	r1, #12
 115 0088 3046     		mov	r0, r6
 116 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL0:
 334:Src/main.c    **** 
 335:Src/main.c    ****   /*Configure GPIO pin Output Level */
 336:Src/main.c    ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 118              		.loc 1 336 0
 119 008e 264F     		ldr	r7, .L3+8
 120 0090 0122     		movs	r2, #1
 121 0092 1146     		mov	r1, r2
ARM GAS  /tmp/ccalorCm.s 			page 9


 122 0094 3846     		mov	r0, r7
 123 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 124              	.LVL1:
 337:Src/main.c    **** 
 338:Src/main.c    ****   /*Configure GPIO pin Output Level */
 339:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin, GPIO_PIN_RESET);
 125              		.loc 1 339 0
 126 009a DFF89C80 		ldr	r8, .L3+24
 127 009e 2246     		mov	r2, r4
 128 00a0 4FF47041 		mov	r1, #61440
 129 00a4 4046     		mov	r0, r8
 130 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL2:
 340:Src/main.c    **** 
 341:Src/main.c    ****   /*Configure GPIO pins : PE2 CS_I2C_SPI_Pin */
 342:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2|CS_I2C_SPI_Pin;
 132              		.loc 1 342 0
 133 00aa 0C23     		movs	r3, #12
 134 00ac 0793     		str	r3, [sp, #28]
 343:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 135              		.loc 1 343 0
 136 00ae 0125     		movs	r5, #1
 137 00b0 0895     		str	r5, [sp, #32]
 344:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 138              		.loc 1 344 0
 139 00b2 0994     		str	r4, [sp, #36]
 345:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 140              		.loc 1 345 0
 141 00b4 0A94     		str	r4, [sp, #40]
 346:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 142              		.loc 1 346 0
 143 00b6 07A9     		add	r1, sp, #28
 144 00b8 3046     		mov	r0, r6
 145 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
 347:Src/main.c    **** 
 348:Src/main.c    ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 349:Src/main.c    ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 147              		.loc 1 349 0
 148 00be 0795     		str	r5, [sp, #28]
 350:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 149              		.loc 1 350 0
 150 00c0 0895     		str	r5, [sp, #32]
 351:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 151              		.loc 1 351 0
 152 00c2 0994     		str	r4, [sp, #36]
 352:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 153              		.loc 1 352 0
 154 00c4 0A94     		str	r4, [sp, #40]
 353:Src/main.c    ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 155              		.loc 1 353 0
 156 00c6 07A9     		add	r1, sp, #28
 157 00c8 3846     		mov	r0, r7
 158 00ca FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL4:
 354:Src/main.c    **** 
 355:Src/main.c    ****   /*Configure GPIO pin : I2S3_WS_Pin */
ARM GAS  /tmp/ccalorCm.s 			page 10


 356:Src/main.c    ****   GPIO_InitStruct.Pin = I2S3_WS_Pin;
 160              		.loc 1 356 0
 161 00ce 1023     		movs	r3, #16
 162 00d0 0793     		str	r3, [sp, #28]
 357:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 163              		.loc 1 357 0
 164 00d2 0227     		movs	r7, #2
 165 00d4 0897     		str	r7, [sp, #32]
 358:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 358 0
 167 00d6 0994     		str	r4, [sp, #36]
 359:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 168              		.loc 1 359 0
 169 00d8 0A94     		str	r4, [sp, #40]
 360:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 170              		.loc 1 360 0
 171 00da 0623     		movs	r3, #6
 172 00dc 0B93     		str	r3, [sp, #44]
 361:Src/main.c    ****   HAL_GPIO_Init(I2S3_WS_GPIO_Port, &GPIO_InitStruct);
 173              		.loc 1 361 0
 174 00de 07A9     		add	r1, sp, #28
 175 00e0 1248     		ldr	r0, .L3+12
 176 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 177              	.LVL5:
 362:Src/main.c    **** 
 363:Src/main.c    ****   /*Configure GPIO pin : BOOT1_Pin */
 364:Src/main.c    ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 178              		.loc 1 364 0
 179 00e6 0423     		movs	r3, #4
 180 00e8 0793     		str	r3, [sp, #28]
 365:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 181              		.loc 1 365 0
 182 00ea 0894     		str	r4, [sp, #32]
 366:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 183              		.loc 1 366 0
 184 00ec 0994     		str	r4, [sp, #36]
 367:Src/main.c    ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 185              		.loc 1 367 0
 186 00ee 07A9     		add	r1, sp, #28
 187 00f0 0F48     		ldr	r0, .L3+16
 188 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 189              	.LVL6:
 368:Src/main.c    **** 
 369:Src/main.c    ****   /*Configure GPIO pins : LD4_Pin LD3_Pin LD5_Pin LD6_Pin */
 370:Src/main.c    ****   GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin;
 190              		.loc 1 370 0
 191 00f6 4FF47043 		mov	r3, #61440
 192 00fa 0793     		str	r3, [sp, #28]
 371:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 193              		.loc 1 371 0
 194 00fc 0895     		str	r5, [sp, #32]
 372:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 195              		.loc 1 372 0
 196 00fe 0994     		str	r4, [sp, #36]
 373:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 197              		.loc 1 373 0
 198 0100 0A94     		str	r4, [sp, #40]
ARM GAS  /tmp/ccalorCm.s 			page 11


 374:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 199              		.loc 1 374 0
 200 0102 07A9     		add	r1, sp, #28
 201 0104 4046     		mov	r0, r8
 202 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 203              	.LVL7:
 375:Src/main.c    **** 
 376:Src/main.c    ****   /*Configure GPIO pin : MEMS_INT2_Pin */
 377:Src/main.c    ****   GPIO_InitStruct.Pin = MEMS_INT2_Pin;
 204              		.loc 1 377 0
 205 010a 0797     		str	r7, [sp, #28]
 378:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 206              		.loc 1 378 0
 207 010c 094B     		ldr	r3, .L3+20
 208 010e 0893     		str	r3, [sp, #32]
 379:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 209              		.loc 1 379 0
 210 0110 0994     		str	r4, [sp, #36]
 380:Src/main.c    ****   HAL_GPIO_Init(MEMS_INT2_GPIO_Port, &GPIO_InitStruct);
 211              		.loc 1 380 0
 212 0112 07A9     		add	r1, sp, #28
 213 0114 3046     		mov	r0, r6
 214 0116 FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL8:
 381:Src/main.c    **** 
 382:Src/main.c    **** }
 216              		.loc 1 382 0
 217 011a 0CB0     		add	sp, sp, #48
 218              	.LCFI2:
 219              		.cfi_def_cfa_offset 24
 220              		@ sp needed
 221 011c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 222              	.L4:
 223              		.align	2
 224              	.L3:
 225 0120 00380240 		.word	1073887232
 226 0124 00100240 		.word	1073876992
 227 0128 00080240 		.word	1073874944
 228 012c 00000240 		.word	1073872896
 229 0130 00040240 		.word	1073873920
 230 0134 00001210 		.word	269615104
 231 0138 000C0240 		.word	1073875968
 232              		.cfi_endproc
 233              	.LFE132:
 235              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 236              		.align	1
 237              		.global	HAL_SPI_RxCpltCallback
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	HAL_SPI_RxCpltCallback:
 244              	.LFB133:
 383:Src/main.c    **** 
 384:Src/main.c    **** /* USER CODE BEGIN 4 */
 385:Src/main.c    **** 
 386:Src/main.c    **** // static void SPI2_NVIC_INIT(void) {
ARM GAS  /tmp/ccalorCm.s 			page 12


 387:Src/main.c    **** //   NVIC_InitTypeDef NVIC_InitStructure;
 388:Src/main.c    **** 
 389:Src/main.c    **** //   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_3); 
 390:Src/main.c    **** //   /* Configure the SPI interrupt priority */
 391:Src/main.c    **** //   NVIC_InitStructure.NVIC_IRQChannel = SPI2_IRQn;
 392:Src/main.c    **** //   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
 393:Src/main.c    **** //   NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 394:Src/main.c    **** //   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 395:Src/main.c    **** //   NVIC_Init(&NVIC_InitStructure);
 396:Src/main.c    **** // }
 397:Src/main.c    **** void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi) {
 245              		.loc 1 397 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              	.LVL9:
 250 0000 10B5     		push	{r4, lr}
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
 398:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 255              		.loc 1 398 0
 256 0002 074C     		ldr	r4, .L7
 257 0004 0122     		movs	r2, #1
 258 0006 4FF48051 		mov	r1, #4096
 259 000a 2046     		mov	r0, r4
 260              	.LVL10:
 261 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 262              	.LVL11:
 399:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_11, GPIO_PIN_SET);
 263              		.loc 1 399 0
 264 0010 0122     		movs	r2, #1
 265 0012 4FF40061 		mov	r1, #2048
 266 0016 2046     		mov	r0, r4
 267 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 268              	.LVL12:
 400:Src/main.c    **** }
 269              		.loc 1 400 0
 270 001c 10BD     		pop	{r4, pc}
 271              	.L8:
 272 001e 00BF     		.align	2
 273              	.L7:
 274 0020 000C0240 		.word	1073875968
 275              		.cfi_endproc
 276              	.LFE133:
 278              		.section	.text._Error_Handler,"ax",%progbits
 279              		.align	1
 280              		.global	_Error_Handler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu fpv4-sp-d16
 286              	_Error_Handler:
 287              	.LFB134:
 401:Src/main.c    **** 
 402:Src/main.c    **** 
ARM GAS  /tmp/ccalorCm.s 			page 13


 403:Src/main.c    **** /* USER CODE END 4 */
 404:Src/main.c    **** 
 405:Src/main.c    **** /**
 406:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 407:Src/main.c    ****   * @param  file: The file name as string.
 408:Src/main.c    ****   * @param  line: The line in file as a number.
 409:Src/main.c    ****   * @retval None
 410:Src/main.c    ****   */
 411:Src/main.c    **** void _Error_Handler(char *file, int line)
 412:Src/main.c    **** {
 288              		.loc 1 412 0
 289              		.cfi_startproc
 290              		@ Volatile: function does not return.
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 294              	.LVL13:
 295              	.L10:
 296 0000 FEE7     		b	.L10
 297              		.cfi_endproc
 298              	.LFE134:
 300              		.section	.text.MX_SPI1_Init,"ax",%progbits
 301              		.align	1
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv4-sp-d16
 307              	MX_SPI1_Init:
 308              	.LFB130:
 270:Src/main.c    **** 
 309              		.loc 1 270 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 270:Src/main.c    **** 
 313              		.loc 1 270 0
 314 0000 08B5     		push	{r3, lr}
 315              	.LCFI4:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
 273:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 319              		.loc 1 273 0
 320 0002 0E48     		ldr	r0, .L15
 321 0004 0E4B     		ldr	r3, .L15+4
 322 0006 0360     		str	r3, [r0]
 274:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 323              		.loc 1 274 0
 324 0008 4FF48273 		mov	r3, #260
 325 000c 4360     		str	r3, [r0, #4]
 275:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 326              		.loc 1 275 0
 327 000e 0023     		movs	r3, #0
 328 0010 8360     		str	r3, [r0, #8]
 276:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 329              		.loc 1 276 0
 330 0012 C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccalorCm.s 			page 14


 277:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 331              		.loc 1 277 0
 332 0014 0361     		str	r3, [r0, #16]
 278:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 333              		.loc 1 278 0
 334 0016 4361     		str	r3, [r0, #20]
 279:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 335              		.loc 1 279 0
 336 0018 4FF40072 		mov	r2, #512
 337 001c 8261     		str	r2, [r0, #24]
 280:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 338              		.loc 1 280 0
 339 001e C361     		str	r3, [r0, #28]
 281:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 340              		.loc 1 281 0
 341 0020 0362     		str	r3, [r0, #32]
 282:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 342              		.loc 1 282 0
 343 0022 4362     		str	r3, [r0, #36]
 283:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 344              		.loc 1 283 0
 345 0024 8362     		str	r3, [r0, #40]
 284:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 346              		.loc 1 284 0
 347 0026 0A23     		movs	r3, #10
 348 0028 C362     		str	r3, [r0, #44]
 285:Src/main.c    ****   {
 349              		.loc 1 285 0
 350 002a FFF7FEFF 		bl	HAL_SPI_Init
 351              	.LVL14:
 352 002e 00B9     		cbnz	r0, .L14
 290:Src/main.c    **** 
 353              		.loc 1 290 0
 354 0030 08BD     		pop	{r3, pc}
 355              	.L14:
 287:Src/main.c    ****   }
 356              		.loc 1 287 0
 357 0032 40F21F11 		movw	r1, #287
 358 0036 0348     		ldr	r0, .L15+8
 359 0038 FFF7FEFF 		bl	_Error_Handler
 360              	.LVL15:
 361              	.L16:
 362              		.align	2
 363              	.L15:
 364 003c 00000000 		.word	hspi1
 365 0040 00300140 		.word	1073819648
 366 0044 00000000 		.word	.LC0
 367              		.cfi_endproc
 368              	.LFE130:
 370              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 371              		.align	1
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	MX_USART2_UART_Init:
 378              	.LFB131:
ARM GAS  /tmp/ccalorCm.s 			page 15


 294:Src/main.c    **** 
 379              		.loc 1 294 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 08B5     		push	{r3, lr}
 384              	.LCFI5:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
 296:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 388              		.loc 1 296 0
 389 0002 0B48     		ldr	r0, .L21
 390 0004 0B4B     		ldr	r3, .L21+4
 391 0006 0360     		str	r3, [r0]
 297:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 392              		.loc 1 297 0
 393 0008 4FF4E133 		mov	r3, #115200
 394 000c 4360     		str	r3, [r0, #4]
 298:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 395              		.loc 1 298 0
 396 000e 0023     		movs	r3, #0
 397 0010 8360     		str	r3, [r0, #8]
 299:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 398              		.loc 1 299 0
 399 0012 C360     		str	r3, [r0, #12]
 300:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 400              		.loc 1 300 0
 401 0014 0361     		str	r3, [r0, #16]
 301:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 402              		.loc 1 301 0
 403 0016 0C22     		movs	r2, #12
 404 0018 4261     		str	r2, [r0, #20]
 302:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 405              		.loc 1 302 0
 406 001a 8361     		str	r3, [r0, #24]
 303:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 407              		.loc 1 303 0
 408 001c C361     		str	r3, [r0, #28]
 304:Src/main.c    ****   {
 409              		.loc 1 304 0
 410 001e FFF7FEFF 		bl	HAL_UART_Init
 411              	.LVL16:
 412 0022 00B9     		cbnz	r0, .L20
 309:Src/main.c    **** 
 413              		.loc 1 309 0
 414 0024 08BD     		pop	{r3, pc}
 415              	.L20:
 306:Src/main.c    ****   }
 416              		.loc 1 306 0
 417 0026 4FF49971 		mov	r1, #306
 418 002a 0348     		ldr	r0, .L21+8
 419 002c FFF7FEFF 		bl	_Error_Handler
 420              	.LVL17:
 421              	.L22:
 422              		.align	2
 423              	.L21:
ARM GAS  /tmp/ccalorCm.s 			page 16


 424 0030 00000000 		.word	huart2
 425 0034 00440040 		.word	1073759232
 426 0038 00000000 		.word	.LC0
 427              		.cfi_endproc
 428              	.LFE131:
 430              		.section	.text.MX_I2S2_Init,"ax",%progbits
 431              		.align	1
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 435              		.fpu fpv4-sp-d16
 437              	MX_I2S2_Init:
 438              	.LFB129:
 250:Src/main.c    **** 
 439              		.loc 1 250 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443 0000 08B5     		push	{r3, lr}
 444              	.LCFI6:
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 3, -8
 447              		.cfi_offset 14, -4
 252:Src/main.c    ****   hi2s2.Init.Mode = I2S_MODE_MASTER_RX;
 448              		.loc 1 252 0
 449 0002 0D48     		ldr	r0, .L27
 450 0004 0D4B     		ldr	r3, .L27+4
 451 0006 0360     		str	r3, [r0]
 253:Src/main.c    ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 452              		.loc 1 253 0
 453 0008 4FF44073 		mov	r3, #768
 454 000c 4360     		str	r3, [r0, #4]
 254:Src/main.c    ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 455              		.loc 1 254 0
 456 000e 0023     		movs	r3, #0
 457 0010 8360     		str	r3, [r0, #8]
 255:Src/main.c    ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 458              		.loc 1 255 0
 459 0012 C360     		str	r3, [r0, #12]
 256:Src/main.c    ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_32K;
 460              		.loc 1 256 0
 461 0014 0361     		str	r3, [r0, #16]
 257:Src/main.c    ****   hi2s2.Init.CPOL = I2S_CPOL_HIGH;
 462              		.loc 1 257 0
 463 0016 4FF4FA42 		mov	r2, #32000
 464 001a 4261     		str	r2, [r0, #20]
 258:Src/main.c    ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 465              		.loc 1 258 0
 466 001c 0822     		movs	r2, #8
 467 001e 8261     		str	r2, [r0, #24]
 259:Src/main.c    ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 468              		.loc 1 259 0
 469 0020 C361     		str	r3, [r0, #28]
 260:Src/main.c    ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 470              		.loc 1 260 0
 471 0022 0362     		str	r3, [r0, #32]
 261:Src/main.c    ****   {
ARM GAS  /tmp/ccalorCm.s 			page 17


 472              		.loc 1 261 0
 473 0024 FFF7FEFF 		bl	HAL_I2S_Init
 474              	.LVL18:
 475 0028 00B9     		cbnz	r0, .L26
 266:Src/main.c    **** 
 476              		.loc 1 266 0
 477 002a 08BD     		pop	{r3, pc}
 478              	.L26:
 263:Src/main.c    ****   }
 479              		.loc 1 263 0
 480 002c 40F20711 		movw	r1, #263
 481 0030 0348     		ldr	r0, .L27+8
 482 0032 FFF7FEFF 		bl	_Error_Handler
 483              	.LVL19:
 484              	.L28:
 485 0036 00BF     		.align	2
 486              	.L27:
 487 0038 00000000 		.word	hi2s2
 488 003c 00380040 		.word	1073756160
 489 0040 00000000 		.word	.LC0
 490              		.cfi_endproc
 491              	.LFE129:
 493              		.section	.text.MX_CRC_Init,"ax",%progbits
 494              		.align	1
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 498              		.fpu fpv4-sp-d16
 500              	MX_CRC_Init:
 501              	.LFB128:
 236:Src/main.c    **** 
 502              		.loc 1 236 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 0000 08B5     		push	{r3, lr}
 507              	.LCFI7:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 3, -8
 510              		.cfi_offset 14, -4
 238:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 511              		.loc 1 238 0
 512 0002 0848     		ldr	r0, .L33
 513 0004 084B     		ldr	r3, .L33+4
 514 0006 0360     		str	r3, [r0]
 239:Src/main.c    ****   {
 515              		.loc 1 239 0
 516 0008 FFF7FEFF 		bl	HAL_CRC_Init
 517              	.LVL20:
 518 000c 30B9     		cbnz	r0, .L32
 244:Src/main.c    **** 
 519              		.loc 1 244 0
 520 000e 054B     		ldr	r3, .L33
 521 0010 1A68     		ldr	r2, [r3]
 522 0012 9368     		ldr	r3, [r2, #8]
 523 0014 43F00103 		orr	r3, r3, #1
 524 0018 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccalorCm.s 			page 18


 246:Src/main.c    **** 
 525              		.loc 1 246 0
 526 001a 08BD     		pop	{r3, pc}
 527              	.L32:
 241:Src/main.c    ****   }
 528              		.loc 1 241 0
 529 001c F121     		movs	r1, #241
 530 001e 0348     		ldr	r0, .L33+8
 531 0020 FFF7FEFF 		bl	_Error_Handler
 532              	.LVL21:
 533              	.L34:
 534              		.align	2
 535              	.L33:
 536 0024 00000000 		.word	hcrc
 537 0028 00300240 		.word	1073885184
 538 002c 00000000 		.word	.LC0
 539              		.cfi_endproc
 540              	.LFE128:
 542              		.section	.text.SystemClock_Config,"ax",%progbits
 543              		.align	1
 544              		.global	SystemClock_Config
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	SystemClock_Config:
 551              	.LFB127:
 172:Src/main.c    **** 
 552              		.loc 1 172 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 96
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 00B5     		push	{lr}
 557              	.LCFI8:
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 14, -4
 560 0002 99B0     		sub	sp, sp, #100
 561              	.LCFI9:
 562              		.cfi_def_cfa_offset 104
 563              	.LBB8:
 180:Src/main.c    **** 
 564              		.loc 1 180 0
 565 0004 0022     		movs	r2, #0
 566 0006 0192     		str	r2, [sp, #4]
 567 0008 314B     		ldr	r3, .L43
 568 000a 196C     		ldr	r1, [r3, #64]
 569 000c 41F08051 		orr	r1, r1, #268435456
 570 0010 1964     		str	r1, [r3, #64]
 571 0012 1B6C     		ldr	r3, [r3, #64]
 572 0014 03F08053 		and	r3, r3, #268435456
 573 0018 0193     		str	r3, [sp, #4]
 574 001a 019B     		ldr	r3, [sp, #4]
 575              	.LBE8:
 576              	.LBB9:
 182:Src/main.c    **** 
 577              		.loc 1 182 0
 578 001c 0292     		str	r2, [sp, #8]
ARM GAS  /tmp/ccalorCm.s 			page 19


 579 001e 2D4B     		ldr	r3, .L43+4
 580 0020 1968     		ldr	r1, [r3]
 581 0022 41F48041 		orr	r1, r1, #16384
 582 0026 1960     		str	r1, [r3]
 583 0028 1B68     		ldr	r3, [r3]
 584 002a 03F48043 		and	r3, r3, #16384
 585 002e 0293     		str	r3, [sp, #8]
 586 0030 029B     		ldr	r3, [sp, #8]
 587              	.LBE9:
 186:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 588              		.loc 1 186 0
 589 0032 0223     		movs	r3, #2
 590 0034 0C93     		str	r3, [sp, #48]
 187:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 591              		.loc 1 187 0
 592 0036 0121     		movs	r1, #1
 593 0038 0F91     		str	r1, [sp, #60]
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 594              		.loc 1 188 0
 595 003a 1021     		movs	r1, #16
 596 003c 1091     		str	r1, [sp, #64]
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 597              		.loc 1 189 0
 598 003e 1293     		str	r3, [sp, #72]
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 599              		.loc 1 190 0
 600 0040 1392     		str	r2, [sp, #76]
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 601              		.loc 1 191 0
 602 0042 1491     		str	r1, [sp, #80]
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 603              		.loc 1 192 0
 604 0044 4FF4A872 		mov	r2, #336
 605 0048 1592     		str	r2, [sp, #84]
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 606              		.loc 1 193 0
 607 004a 1693     		str	r3, [sp, #88]
 194:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 608              		.loc 1 194 0
 609 004c 0723     		movs	r3, #7
 610 004e 1793     		str	r3, [sp, #92]
 195:Src/main.c    ****   {
 611              		.loc 1 195 0
 612 0050 0CA8     		add	r0, sp, #48
 613 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 614              	.LVL22:
 615 0056 70BB     		cbnz	r0, .L40
 202:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 616              		.loc 1 202 0
 617 0058 0F23     		movs	r3, #15
 618 005a 0793     		str	r3, [sp, #28]
 204:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 619              		.loc 1 204 0
 620 005c 0223     		movs	r3, #2
 621 005e 0893     		str	r3, [sp, #32]
 205:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 622              		.loc 1 205 0
ARM GAS  /tmp/ccalorCm.s 			page 20


 623 0060 0023     		movs	r3, #0
 624 0062 0993     		str	r3, [sp, #36]
 206:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 625              		.loc 1 206 0
 626 0064 4FF4A053 		mov	r3, #5120
 627 0068 0A93     		str	r3, [sp, #40]
 207:Src/main.c    **** 
 628              		.loc 1 207 0
 629 006a 4FF48053 		mov	r3, #4096
 630 006e 0B93     		str	r3, [sp, #44]
 209:Src/main.c    ****   {
 631              		.loc 1 209 0
 632 0070 0521     		movs	r1, #5
 633 0072 07A8     		add	r0, sp, #28
 634 0074 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 635              	.LVL23:
 636 0078 08BB     		cbnz	r0, .L41
 214:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 637              		.loc 1 214 0
 638 007a 0123     		movs	r3, #1
 639 007c 0393     		str	r3, [sp, #12]
 215:Src/main.c    ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 640              		.loc 1 215 0
 641 007e C023     		movs	r3, #192
 642 0080 0493     		str	r3, [sp, #16]
 216:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 643              		.loc 1 216 0
 644 0082 0223     		movs	r3, #2
 645 0084 0593     		str	r3, [sp, #20]
 217:Src/main.c    ****   {
 646              		.loc 1 217 0
 647 0086 03A8     		add	r0, sp, #12
 648 0088 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 649              	.LVL24:
 650 008c D8B9     		cbnz	r0, .L42
 224:Src/main.c    **** 
 651              		.loc 1 224 0
 652 008e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 653              	.LVL25:
 654 0092 114B     		ldr	r3, .L43+8
 655 0094 A3FB0030 		umull	r3, r0, r3, r0
 656 0098 8009     		lsrs	r0, r0, #6
 657 009a FFF7FEFF 		bl	HAL_SYSTICK_Config
 658              	.LVL26:
 228:Src/main.c    **** 
 659              		.loc 1 228 0
 660 009e 0420     		movs	r0, #4
 661 00a0 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 662              	.LVL27:
 231:Src/main.c    **** }
 663              		.loc 1 231 0
 664 00a4 0022     		movs	r2, #0
 665 00a6 1146     		mov	r1, r2
 666 00a8 4FF0FF30 		mov	r0, #-1
 667 00ac FFF7FEFF 		bl	HAL_NVIC_SetPriority
 668              	.LVL28:
 232:Src/main.c    **** 
ARM GAS  /tmp/ccalorCm.s 			page 21


 669              		.loc 1 232 0
 670 00b0 19B0     		add	sp, sp, #100
 671              	.LCFI10:
 672              		.cfi_remember_state
 673              		.cfi_def_cfa_offset 4
 674              		@ sp needed
 675 00b2 5DF804FB 		ldr	pc, [sp], #4
 676              	.L40:
 677              	.LCFI11:
 678              		.cfi_restore_state
 197:Src/main.c    ****   }
 679              		.loc 1 197 0
 680 00b6 C521     		movs	r1, #197
 681 00b8 0848     		ldr	r0, .L43+12
 682 00ba FFF7FEFF 		bl	_Error_Handler
 683              	.LVL29:
 684              	.L41:
 211:Src/main.c    ****   }
 685              		.loc 1 211 0
 686 00be D321     		movs	r1, #211
 687 00c0 0648     		ldr	r0, .L43+12
 688 00c2 FFF7FEFF 		bl	_Error_Handler
 689              	.LVL30:
 690              	.L42:
 219:Src/main.c    ****   }
 691              		.loc 1 219 0
 692 00c6 DB21     		movs	r1, #219
 693 00c8 0448     		ldr	r0, .L43+12
 694 00ca FFF7FEFF 		bl	_Error_Handler
 695              	.LVL31:
 696              	.L44:
 697 00ce 00BF     		.align	2
 698              	.L43:
 699 00d0 00380240 		.word	1073887232
 700 00d4 00700040 		.word	1073770496
 701 00d8 D34D6210 		.word	274877907
 702 00dc 00000000 		.word	.LC0
 703              		.cfi_endproc
 704              	.LFE127:
 706              		.section	.text.main,"ax",%progbits
 707              		.align	1
 708              		.global	main
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 712              		.fpu fpv4-sp-d16
 714              	main:
 715              	.LFB126:
  95:Src/main.c    ****   /* USER CODE BEGIN 1 */
 716              		.loc 1 95 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720 0000 10B5     		push	{r4, lr}
 721              	.LCFI12:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 4, -8
ARM GAS  /tmp/ccalorCm.s 			page 22


 724              		.cfi_offset 14, -4
 103:Src/main.c    **** 
 725              		.loc 1 103 0
 726 0002 FFF7FEFF 		bl	HAL_Init
 727              	.LVL32:
 109:Src/main.c    **** 
 728              		.loc 1 109 0
 729 0006 FFF7FEFF 		bl	SystemClock_Config
 730              	.LVL33:
 116:Src/main.c    ****   MX_SPI1_Init();
 731              		.loc 1 116 0
 732 000a FFF7FEFF 		bl	MX_GPIO_Init
 733              	.LVL34:
 117:Src/main.c    ****   MX_USART2_UART_Init();
 734              		.loc 1 117 0
 735 000e FFF7FEFF 		bl	MX_SPI1_Init
 736              	.LVL35:
 118:Src/main.c    ****   MX_I2S2_Init();
 737              		.loc 1 118 0
 738 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 739              	.LVL36:
 119:Src/main.c    ****   MX_CRC_Init();
 740              		.loc 1 119 0
 741 0016 FFF7FEFF 		bl	MX_I2S2_Init
 742              	.LVL37:
 120:Src/main.c    ****   MX_PDM2PCM_Init();
 743              		.loc 1 120 0
 744 001a FFF7FEFF 		bl	MX_CRC_Init
 745              	.LVL38:
 121:Src/main.c    ****   /* USER CODE BEGIN 2 */
 746              		.loc 1 121 0
 747 001e FFF7FEFF 		bl	MX_PDM2PCM_Init
 748              	.LVL39:
 133:Src/main.c    ****   // SPI2_NVIC_INIT();
 749              		.loc 1 133 0
 750 0022 104C     		ldr	r4, .L48
 751 0024 0122     		movs	r2, #1
 752 0026 0421     		movs	r1, #4
 753 0028 2046     		mov	r0, r4
 754 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 755              	.LVL40:
 135:Src/main.c    ****   HAL_I2S_Receive_IT(&hi2s2, dataBuffer, 1024);
 756              		.loc 1 135 0
 757 002e 0122     		movs	r2, #1
 758 0030 4FF48071 		mov	r1, #256
 759 0034 2046     		mov	r0, r4
 760 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 761              	.LVL41:
 136:Src/main.c    ****   HAL_GPIO_WritePin(LED_PORT, LED2_PIN, GPIO_PIN_SET);
 762              		.loc 1 136 0
 763 003a 4FF48062 		mov	r2, #1024
 764 003e 0A49     		ldr	r1, .L48+4
 765 0040 0A48     		ldr	r0, .L48+8
 766 0042 FFF7FEFF 		bl	HAL_I2S_Receive_IT
 767              	.LVL42:
 137:Src/main.c    ****   while (1)
 768              		.loc 1 137 0
ARM GAS  /tmp/ccalorCm.s 			page 23


 769 0046 0122     		movs	r2, #1
 770 0048 4FF40051 		mov	r1, #8192
 771 004c 0848     		ldr	r0, .L48+12
 772 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 773              	.LVL43:
 774              	.L46:
 141:Src/main.c    ****     HAL_GPIO_TogglePin(LED_PORT, LED4_PIN);
 775              		.loc 1 141 0 discriminator 1
 776 0052 6420     		movs	r0, #100
 777 0054 FFF7FEFF 		bl	HAL_Delay
 778              	.LVL44:
 142:Src/main.c    ****     // HAL_GPIO_Wri~/E, SPI1_~/NCS_PIN, GPIO_PIN_RESET); 
 779              		.loc 1 142 0 discriminator 1
 780 0058 4FF40041 		mov	r1, #32768
 781 005c 0448     		ldr	r0, .L48+12
 782 005e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 783              	.LVL45:
 784 0062 F6E7     		b	.L46
 785              	.L49:
 786              		.align	2
 787              	.L48:
 788 0064 00100240 		.word	1073876992
 789 0068 00000000 		.word	dataBuffer
 790 006c 00000000 		.word	hi2s2
 791 0070 000C0240 		.word	1073875968
 792              		.cfi_endproc
 793              	.LFE126:
 795              		.comm	dataBuffer,2048,4
 796              		.comm	huart2,64,4
 797              		.comm	hspi1,88,4
 798              		.comm	hi2s2,72,4
 799              		.comm	hcrc,8,4
 800              		.section	.rodata.MX_SPI1_Init.str1.4,"aMS",%progbits,1
 801              		.align	2
 802              	.LC0:
 803 0000 5372632F 		.ascii	"Src/main.c\000"
 803      6D61696E 
 803      2E6300
 804              		.text
 805              	.Letext0:
 806              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 807              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 808              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 809              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 810              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 811              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 812              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 813              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 814              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 815              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 816              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 817              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 818              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 819              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 820              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_crc.h"
 821              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 822              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
ARM GAS  /tmp/ccalorCm.s 			page 24


 823              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 824              		.file 20 "Middlewares/ST/STM32_Audio/Addons/PDM/Inc/pdm2pcm_glo.h"
 825              		.file 21 "Inc/pdm2pcm.h"
 826              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 827              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccalorCm.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccalorCm.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccalorCm.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccalorCm.s:225    .text.MX_GPIO_Init:0000000000000120 $d
     /tmp/ccalorCm.s:236    .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccalorCm.s:243    .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccalorCm.s:274    .text.HAL_SPI_RxCpltCallback:0000000000000020 $d
     /tmp/ccalorCm.s:279    .text._Error_Handler:0000000000000000 $t
     /tmp/ccalorCm.s:286    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccalorCm.s:301    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccalorCm.s:307    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccalorCm.s:364    .text.MX_SPI1_Init:000000000000003c $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccalorCm.s:371    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccalorCm.s:377    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccalorCm.s:424    .text.MX_USART2_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccalorCm.s:431    .text.MX_I2S2_Init:0000000000000000 $t
     /tmp/ccalorCm.s:437    .text.MX_I2S2_Init:0000000000000000 MX_I2S2_Init
     /tmp/ccalorCm.s:487    .text.MX_I2S2_Init:0000000000000038 $d
                            *COM*:0000000000000048 hi2s2
     /tmp/ccalorCm.s:494    .text.MX_CRC_Init:0000000000000000 $t
     /tmp/ccalorCm.s:500    .text.MX_CRC_Init:0000000000000000 MX_CRC_Init
     /tmp/ccalorCm.s:536    .text.MX_CRC_Init:0000000000000024 $d
                            *COM*:0000000000000008 hcrc
     /tmp/ccalorCm.s:543    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccalorCm.s:550    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccalorCm.s:699    .text.SystemClock_Config:00000000000000d0 $d
     /tmp/ccalorCm.s:707    .text.main:0000000000000000 $t
     /tmp/ccalorCm.s:714    .text.main:0000000000000000 main
     /tmp/ccalorCm.s:788    .text.main:0000000000000064 $d
                            *COM*:0000000000000800 dataBuffer
     /tmp/ccalorCm.s:801    .rodata.MX_SPI1_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_UART_Init
HAL_I2S_Init
HAL_CRC_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_PDM2PCM_Init
HAL_I2S_Receive_IT
HAL_Delay
HAL_GPIO_TogglePin
