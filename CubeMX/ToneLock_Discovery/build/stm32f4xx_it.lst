ARM GAS  /tmp/cce96fwy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/cce96fwy.s 			page 2


  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** #include "main.h"
  38:Src/stm32f4xx_it.c **** 
  39:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  40:Src/stm32f4xx_it.c **** 
  41:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Src/stm32f4xx_it.c **** extern I2S_HandleTypeDef hi2s2;
  45:Src/stm32f4xx_it.c **** 
  46:Src/stm32f4xx_it.c **** /******************************************************************************/
  47:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  48:Src/stm32f4xx_it.c **** /******************************************************************************/
  49:Src/stm32f4xx_it.c **** 
  50:Src/stm32f4xx_it.c **** /**
  51:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  52:Src/stm32f4xx_it.c **** */
  53:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  54:Src/stm32f4xx_it.c **** {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  55:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  58:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  59:Src/stm32f4xx_it.c **** 
  60:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  61:Src/stm32f4xx_it.c **** }
  33              		.loc 1 61 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE126:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HardFault_Handler:
  47              	.LFB127:
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c **** /**
  64:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  65:Src/stm32f4xx_it.c **** */
  66:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  67:Src/stm32f4xx_it.c **** {
  48              		.loc 1 67 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
ARM GAS  /tmp/cce96fwy.s 			page 3


  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  68:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  69:Src/stm32f4xx_it.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
  53              		.loc 1 69 0
  54 0000 0122     		movs	r2, #1
  55 0002 4FF40051 		mov	r1, #8192
  56 0006 0548     		ldr	r0, .L4
  67:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  57              		.loc 1 67 0
  58 0008 08B5     		push	{r3, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 3, -8
  62              		.cfi_offset 14, -4
  63              		.loc 1 69 0
  64 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  65              	.LVL0:
  70:Src/stm32f4xx_it.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
  66              		.loc 1 70 0
  67 000e 0122     		movs	r2, #1
  68 0010 4FF48041 		mov	r1, #16384
  69 0014 0148     		ldr	r0, .L4
  70 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  71              	.LVL1:
  72              	.L3:
  73 001a FEE7     		b	.L3
  74              	.L5:
  75              		.align	2
  76              	.L4:
  77 001c 000C0240 		.word	1073875968
  78              		.cfi_endproc
  79              	.LFE127:
  81              		.section	.text.MemManage_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	MemManage_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	MemManage_Handler:
  90              	.LFB128:
  71:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  72:Src/stm32f4xx_it.c ****   while (1)
  73:Src/stm32f4xx_it.c ****   {
  74:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  75:Src/stm32f4xx_it.c ****     
  76:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  77:Src/stm32f4xx_it.c ****   }
  78:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  79:Src/stm32f4xx_it.c **** 
  80:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  81:Src/stm32f4xx_it.c **** }
  82:Src/stm32f4xx_it.c **** 
  83:Src/stm32f4xx_it.c **** /**
  84:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  85:Src/stm32f4xx_it.c **** */
ARM GAS  /tmp/cce96fwy.s 			page 4


  86:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  87:Src/stm32f4xx_it.c **** {
  91              		.loc 1 87 0
  92              		.cfi_startproc
  93              		@ Volatile: function does not return.
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.L7:
  98 0000 FEE7     		b	.L7
  99              		.cfi_endproc
 100              	.LFE128:
 102              		.section	.text.BusFault_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	BusFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	BusFault_Handler:
 111              	.LFB129:
  88:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  89:Src/stm32f4xx_it.c **** 
  90:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  91:Src/stm32f4xx_it.c ****   while (1)
  92:Src/stm32f4xx_it.c ****   {
  93:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  94:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  95:Src/stm32f4xx_it.c ****   }
  96:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  97:Src/stm32f4xx_it.c **** 
  98:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  99:Src/stm32f4xx_it.c **** }
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c **** /**
 102:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 103:Src/stm32f4xx_it.c **** */
 104:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 105:Src/stm32f4xx_it.c **** {
 112              		.loc 1 105 0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.L9:
 119 0000 FEE7     		b	.L9
 120              		.cfi_endproc
 121              	.LFE129:
 123              		.section	.text.UsageFault_Handler,"ax",%progbits
 124              		.align	1
 125              		.global	UsageFault_Handler
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	UsageFault_Handler:
ARM GAS  /tmp/cce96fwy.s 			page 5


 132              	.LFB130:
 106:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 107:Src/stm32f4xx_it.c **** 
 108:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 109:Src/stm32f4xx_it.c ****   while (1)
 110:Src/stm32f4xx_it.c ****   {
 111:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 112:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 113:Src/stm32f4xx_it.c ****   }
 114:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 115:Src/stm32f4xx_it.c **** 
 116:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 117:Src/stm32f4xx_it.c **** }
 118:Src/stm32f4xx_it.c **** 
 119:Src/stm32f4xx_it.c **** /**
 120:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 121:Src/stm32f4xx_it.c **** */
 122:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 123:Src/stm32f4xx_it.c **** {
 133              		.loc 1 123 0
 134              		.cfi_startproc
 135              		@ Volatile: function does not return.
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.L11:
 140 0000 FEE7     		b	.L11
 141              		.cfi_endproc
 142              	.LFE130:
 144              		.section	.text.SVC_Handler,"ax",%progbits
 145              		.align	1
 146              		.global	SVC_Handler
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	SVC_Handler:
 153              	.LFB137:
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE137:
 162              		.section	.text.DebugMon_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	DebugMon_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	DebugMon_Handler:
 171              	.LFB139:
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cce96fwy.s 			page 6


 175              		@ link register save eliminated.
 176 0000 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE139:
 180              		.section	.text.PendSV_Handler,"ax",%progbits
 181              		.align	1
 182              		.global	PendSV_Handler
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	PendSV_Handler:
 189              	.LFB141:
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE141:
 198              		.section	.text.SysTick_Handler,"ax",%progbits
 199              		.align	1
 200              		.global	SysTick_Handler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	SysTick_Handler:
 207              	.LFB134:
 124:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 125:Src/stm32f4xx_it.c **** 
 126:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 127:Src/stm32f4xx_it.c ****   while (1)
 128:Src/stm32f4xx_it.c ****   {
 129:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 130:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 131:Src/stm32f4xx_it.c ****   }
 132:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 133:Src/stm32f4xx_it.c **** 
 134:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 135:Src/stm32f4xx_it.c **** }
 136:Src/stm32f4xx_it.c **** 
 137:Src/stm32f4xx_it.c **** /**
 138:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 139:Src/stm32f4xx_it.c **** */
 140:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 141:Src/stm32f4xx_it.c **** {
 142:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 143:Src/stm32f4xx_it.c **** 
 144:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 145:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 146:Src/stm32f4xx_it.c **** 
 147:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 148:Src/stm32f4xx_it.c **** }
 149:Src/stm32f4xx_it.c **** 
 150:Src/stm32f4xx_it.c **** /**
 151:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
ARM GAS  /tmp/cce96fwy.s 			page 7


 152:Src/stm32f4xx_it.c **** */
 153:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 154:Src/stm32f4xx_it.c **** {
 155:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 156:Src/stm32f4xx_it.c **** 
 157:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 158:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 159:Src/stm32f4xx_it.c **** 
 160:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 161:Src/stm32f4xx_it.c **** }
 162:Src/stm32f4xx_it.c **** 
 163:Src/stm32f4xx_it.c **** /**
 164:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 165:Src/stm32f4xx_it.c **** */
 166:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 167:Src/stm32f4xx_it.c **** {
 168:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 169:Src/stm32f4xx_it.c **** 
 170:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 171:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 172:Src/stm32f4xx_it.c **** 
 173:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 174:Src/stm32f4xx_it.c **** }
 175:Src/stm32f4xx_it.c **** 
 176:Src/stm32f4xx_it.c **** /**
 177:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 178:Src/stm32f4xx_it.c **** */
 179:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 180:Src/stm32f4xx_it.c **** {
 208              		.loc 1 180 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		.loc 1 180 0
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI1:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 181:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 182:Src/stm32f4xx_it.c **** 
 183:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 184:Src/stm32f4xx_it.c ****   HAL_IncTick();
 218              		.loc 1 184 0
 219 0002 FFF7FEFF 		bl	HAL_IncTick
 220              	.LVL2:
 185:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 186:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 187:Src/stm32f4xx_it.c **** 
 188:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 189:Src/stm32f4xx_it.c **** }
 221              		.loc 1 189 0
 222 0006 BDE80840 		pop	{r3, lr}
 223              	.LCFI2:
 224              		.cfi_restore 14
 225              		.cfi_restore 3
 226              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cce96fwy.s 			page 8


 185:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 227              		.loc 1 185 0
 228 000a FFF7FEBF 		b	HAL_SYSTICK_IRQHandler
 229              	.LVL3:
 230              		.cfi_endproc
 231              	.LFE134:
 233              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 234              		.align	1
 235              		.global	SPI2_IRQHandler
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv4-sp-d16
 241              	SPI2_IRQHandler:
 242              	.LFB135:
 190:Src/stm32f4xx_it.c **** 
 191:Src/stm32f4xx_it.c **** /******************************************************************************/
 192:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 193:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 194:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 195:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 196:Src/stm32f4xx_it.c **** /******************************************************************************/
 197:Src/stm32f4xx_it.c **** 
 198:Src/stm32f4xx_it.c **** 
 199:Src/stm32f4xx_it.c **** /**
 200:Src/stm32f4xx_it.c **** * @brief This function handles SPI2 global interrupt.
 201:Src/stm32f4xx_it.c **** */
 202:Src/stm32f4xx_it.c **** void SPI2_IRQHandler(void)
 203:Src/stm32f4xx_it.c **** {
 243              		.loc 1 203 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 204:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 205:Src/stm32f4xx_it.c ****   extern uint8_t RECORD_ENABLE;
 206:Src/stm32f4xx_it.c ****   extern uint16_t * PDM_BUF_1;
 207:Src/stm32f4xx_it.c ****   extern uint8_t PDM_complete_flag;
 208:Src/stm32f4xx_it.c ****   // extern uint16_t dataBuffer[];
 209:Src/stm32f4xx_it.c ****   // if (HAL_SPI_GetState(&hi2s2) == HAL_SPI_STATE_READY){
 210:Src/stm32f4xx_it.c ****   //   HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 211:Src/stm32f4xx_it.c ****   //   HAL_Delay(200);
 212:Src/stm32f4xx_it.c ****   //   // HAL_I2S_Receive_IT(&hi2s2, dataBuffer, 1024);
 213:Src/stm32f4xx_it.c ****   // }
 214:Src/stm32f4xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 215:Src/stm32f4xx_it.c ****   HAL_I2S_IRQHandler(&hi2s2);
 248              		.loc 1 215 0
 249 0000 0148     		ldr	r0, .L17
 250 0002 FFF7FEBF 		b	HAL_I2S_IRQHandler
 251              	.LVL4:
 252              	.L18:
 253 0006 00BF     		.align	2
 254              	.L17:
 255 0008 00000000 		.word	hi2s2
 256              		.cfi_endproc
 257              	.LFE135:
 259              		.text
ARM GAS  /tmp/cce96fwy.s 			page 9


 260              	.Letext0:
 261              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 262              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 263              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 264              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 265              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 266              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 267              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 268              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 269              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 270              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 271              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 272              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 273              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 274              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 275              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/cce96fwy.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cce96fwy.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cce96fwy.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cce96fwy.s:39     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cce96fwy.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cce96fwy.s:77     .text.HardFault_Handler:000000000000001c $d
     /tmp/cce96fwy.s:82     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cce96fwy.s:89     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cce96fwy.s:103    .text.BusFault_Handler:0000000000000000 $t
     /tmp/cce96fwy.s:110    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cce96fwy.s:124    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cce96fwy.s:131    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cce96fwy.s:145    .text.SVC_Handler:0000000000000000 $t
     /tmp/cce96fwy.s:152    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cce96fwy.s:163    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cce96fwy.s:170    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cce96fwy.s:181    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cce96fwy.s:188    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cce96fwy.s:199    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cce96fwy.s:206    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cce96fwy.s:234    .text.SPI2_IRQHandler:0000000000000000 $t
     /tmp/cce96fwy.s:241    .text.SPI2_IRQHandler:0000000000000000 SPI2_IRQHandler
     /tmp/cce96fwy.s:255    .text.SPI2_IRQHandler:0000000000000008 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_I2S_IRQHandler
hi2s2
