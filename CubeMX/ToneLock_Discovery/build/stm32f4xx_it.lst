ARM GAS  /tmp/ccO1cq7L.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccO1cq7L.s 			page 2


  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** #include "main.h"
  38:Src/stm32f4xx_it.c **** 
  39:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  40:Src/stm32f4xx_it.c **** 
  41:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Src/stm32f4xx_it.c **** extern I2S_HandleTypeDef hi2s2;
  45:Src/stm32f4xx_it.c **** 
  46:Src/stm32f4xx_it.c **** /******************************************************************************/
  47:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  48:Src/stm32f4xx_it.c **** /******************************************************************************/
  49:Src/stm32f4xx_it.c **** 
  50:Src/stm32f4xx_it.c **** /**
  51:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  52:Src/stm32f4xx_it.c **** */
  53:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  54:Src/stm32f4xx_it.c **** {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  55:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  58:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  59:Src/stm32f4xx_it.c **** 
  60:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  61:Src/stm32f4xx_it.c **** }
  33              		.loc 1 61 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE126:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HardFault_Handler:
  47              	.LFB127:
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c **** /**
  64:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  65:Src/stm32f4xx_it.c **** */
  66:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  67:Src/stm32f4xx_it.c **** {
  48              		.loc 1 67 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
ARM GAS  /tmp/ccO1cq7L.s 			page 3


  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 08B5     		push	{r3, lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 3, -8
  57              		.cfi_offset 14, -4
  68:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  69:Src/stm32f4xx_it.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
  58              		.loc 1 69 0
  59 0002 074C     		ldr	r4, .L5
  60 0004 0122     		movs	r2, #1
  61 0006 4FF40051 		mov	r1, #8192
  62 000a 2046     		mov	r0, r4
  63 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
  64              	.LVL0:
  70:Src/stm32f4xx_it.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
  65              		.loc 1 70 0
  66 0010 0122     		movs	r2, #1
  67 0012 4FF48041 		mov	r1, #16384
  68 0016 2046     		mov	r0, r4
  69 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
  70              	.LVL1:
  71              	.L3:
  72 001c FEE7     		b	.L3
  73              	.L6:
  74 001e 00BF     		.align	2
  75              	.L5:
  76 0020 000C0240 		.word	1073875968
  77              		.cfi_endproc
  78              	.LFE127:
  80              		.section	.text.MemManage_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	MemManage_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	MemManage_Handler:
  89              	.LFB128:
  71:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  72:Src/stm32f4xx_it.c ****   while (1)
  73:Src/stm32f4xx_it.c ****   {
  74:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  75:Src/stm32f4xx_it.c ****     
  76:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  77:Src/stm32f4xx_it.c ****   }
  78:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  79:Src/stm32f4xx_it.c **** 
  80:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  81:Src/stm32f4xx_it.c **** }
  82:Src/stm32f4xx_it.c **** 
  83:Src/stm32f4xx_it.c **** /**
  84:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  85:Src/stm32f4xx_it.c **** */
  86:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  87:Src/stm32f4xx_it.c **** {
ARM GAS  /tmp/ccO1cq7L.s 			page 4


  90              		.loc 1 87 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L8:
  97 0000 FEE7     		b	.L8
  98              		.cfi_endproc
  99              	.LFE128:
 101              		.section	.text.BusFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	BusFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	BusFault_Handler:
 110              	.LFB129:
  88:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  89:Src/stm32f4xx_it.c **** 
  90:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  91:Src/stm32f4xx_it.c ****   while (1)
  92:Src/stm32f4xx_it.c ****   {
  93:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  94:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  95:Src/stm32f4xx_it.c ****   }
  96:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  97:Src/stm32f4xx_it.c **** 
  98:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  99:Src/stm32f4xx_it.c **** }
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c **** /**
 102:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 103:Src/stm32f4xx_it.c **** */
 104:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 105:Src/stm32f4xx_it.c **** {
 111              		.loc 1 105 0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L10:
 118 0000 FEE7     		b	.L10
 119              		.cfi_endproc
 120              	.LFE129:
 122              		.section	.text.UsageFault_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	UsageFault_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	UsageFault_Handler:
 131              	.LFB130:
 106:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
ARM GAS  /tmp/ccO1cq7L.s 			page 5


 107:Src/stm32f4xx_it.c **** 
 108:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 109:Src/stm32f4xx_it.c ****   while (1)
 110:Src/stm32f4xx_it.c ****   {
 111:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 112:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 113:Src/stm32f4xx_it.c ****   }
 114:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 115:Src/stm32f4xx_it.c **** 
 116:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 117:Src/stm32f4xx_it.c **** }
 118:Src/stm32f4xx_it.c **** 
 119:Src/stm32f4xx_it.c **** /**
 120:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 121:Src/stm32f4xx_it.c **** */
 122:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 123:Src/stm32f4xx_it.c **** {
 132              		.loc 1 123 0
 133              		.cfi_startproc
 134              		@ Volatile: function does not return.
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.L12:
 139 0000 FEE7     		b	.L12
 140              		.cfi_endproc
 141              	.LFE130:
 143              		.section	.text.SVC_Handler,"ax",%progbits
 144              		.align	1
 145              		.global	SVC_Handler
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	SVC_Handler:
 152              	.LFB131:
 124:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 125:Src/stm32f4xx_it.c **** 
 126:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 127:Src/stm32f4xx_it.c ****   while (1)
 128:Src/stm32f4xx_it.c ****   {
 129:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 130:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 131:Src/stm32f4xx_it.c ****   }
 132:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 133:Src/stm32f4xx_it.c **** 
 134:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 135:Src/stm32f4xx_it.c **** }
 136:Src/stm32f4xx_it.c **** 
 137:Src/stm32f4xx_it.c **** /**
 138:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 139:Src/stm32f4xx_it.c **** */
 140:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 141:Src/stm32f4xx_it.c **** {
 153              		.loc 1 141 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccO1cq7L.s 			page 6


 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 142:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 143:Src/stm32f4xx_it.c **** 
 144:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 145:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 146:Src/stm32f4xx_it.c **** 
 147:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 148:Src/stm32f4xx_it.c **** }
 158              		.loc 1 148 0
 159 0000 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE131:
 163              		.section	.text.DebugMon_Handler,"ax",%progbits
 164              		.align	1
 165              		.global	DebugMon_Handler
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	DebugMon_Handler:
 172              	.LFB132:
 149:Src/stm32f4xx_it.c **** 
 150:Src/stm32f4xx_it.c **** /**
 151:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 152:Src/stm32f4xx_it.c **** */
 153:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 154:Src/stm32f4xx_it.c **** {
 173              		.loc 1 154 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 155:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 156:Src/stm32f4xx_it.c **** 
 157:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 158:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 159:Src/stm32f4xx_it.c **** 
 160:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 161:Src/stm32f4xx_it.c **** }
 178              		.loc 1 161 0
 179 0000 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE132:
 183              		.section	.text.PendSV_Handler,"ax",%progbits
 184              		.align	1
 185              		.global	PendSV_Handler
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	PendSV_Handler:
 192              	.LFB133:
 162:Src/stm32f4xx_it.c **** 
 163:Src/stm32f4xx_it.c **** /**
 164:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 165:Src/stm32f4xx_it.c **** */
ARM GAS  /tmp/ccO1cq7L.s 			page 7


 166:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 167:Src/stm32f4xx_it.c **** {
 193              		.loc 1 167 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 168:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 169:Src/stm32f4xx_it.c **** 
 170:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 171:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 172:Src/stm32f4xx_it.c **** 
 173:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 174:Src/stm32f4xx_it.c **** }
 198              		.loc 1 174 0
 199 0000 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE133:
 203              		.section	.text.SysTick_Handler,"ax",%progbits
 204              		.align	1
 205              		.global	SysTick_Handler
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	SysTick_Handler:
 212              	.LFB134:
 175:Src/stm32f4xx_it.c **** 
 176:Src/stm32f4xx_it.c **** /**
 177:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 178:Src/stm32f4xx_it.c **** */
 179:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 180:Src/stm32f4xx_it.c **** {
 213              		.loc 1 180 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 08B5     		push	{r3, lr}
 218              	.LCFI1:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 3, -8
 221              		.cfi_offset 14, -4
 181:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 182:Src/stm32f4xx_it.c **** 
 183:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 184:Src/stm32f4xx_it.c ****   HAL_IncTick();
 222              		.loc 1 184 0
 223 0002 FFF7FEFF 		bl	HAL_IncTick
 224              	.LVL2:
 185:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 225              		.loc 1 185 0
 226 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 227              	.LVL3:
 186:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 187:Src/stm32f4xx_it.c **** 
 188:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 189:Src/stm32f4xx_it.c **** }
ARM GAS  /tmp/ccO1cq7L.s 			page 8


 228              		.loc 1 189 0
 229 000a 08BD     		pop	{r3, pc}
 230              		.cfi_endproc
 231              	.LFE134:
 233              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 234              		.align	1
 235              		.global	SPI2_IRQHandler
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv4-sp-d16
 241              	SPI2_IRQHandler:
 242              	.LFB135:
 190:Src/stm32f4xx_it.c **** 
 191:Src/stm32f4xx_it.c **** /******************************************************************************/
 192:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 193:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 194:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 195:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 196:Src/stm32f4xx_it.c **** /******************************************************************************/
 197:Src/stm32f4xx_it.c **** 
 198:Src/stm32f4xx_it.c **** 
 199:Src/stm32f4xx_it.c **** /**
 200:Src/stm32f4xx_it.c **** * @brief This function handles SPI2 global interrupt.
 201:Src/stm32f4xx_it.c **** */
 202:Src/stm32f4xx_it.c **** void SPI2_IRQHandler(void)
 203:Src/stm32f4xx_it.c **** {
 243              		.loc 1 203 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 0000 08B5     		push	{r3, lr}
 248              	.LCFI2:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 3, -8
 251              		.cfi_offset 14, -4
 204:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 205:Src/stm32f4xx_it.c ****   // extern uint16_t dataBuffer[];
 206:Src/stm32f4xx_it.c ****   // if (HAL_SPI_GetState(&hi2s2) == HAL_SPI_STATE_READY){
 207:Src/stm32f4xx_it.c ****   //   HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 208:Src/stm32f4xx_it.c ****   //   HAL_Delay(200);
 209:Src/stm32f4xx_it.c ****   //   // HAL_I2S_Receive_IT(&hi2s2, dataBuffer, 1024);
 210:Src/stm32f4xx_it.c ****   // }
 211:Src/stm32f4xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 212:Src/stm32f4xx_it.c ****   HAL_I2S_IRQHandler(&hi2s2);
 252              		.loc 1 212 0
 253 0002 0248     		ldr	r0, .L20
 254 0004 FFF7FEFF 		bl	HAL_I2S_IRQHandler
 255              	.LVL4:
 213:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 214:Src/stm32f4xx_it.c ****   
 215:Src/stm32f4xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 216:Src/stm32f4xx_it.c **** }
 256              		.loc 1 216 0
 257 0008 08BD     		pop	{r3, pc}
 258              	.L21:
 259 000a 00BF     		.align	2
ARM GAS  /tmp/ccO1cq7L.s 			page 9


 260              	.L20:
 261 000c 00000000 		.word	hi2s2
 262              		.cfi_endproc
 263              	.LFE135:
 265              		.text
 266              	.Letext0:
 267              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 268              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 269              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 270              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 271              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 272              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 273              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 274              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 275              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 276              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 277              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 278              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 279              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 280              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 281              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccO1cq7L.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccO1cq7L.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccO1cq7L.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccO1cq7L.s:39     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccO1cq7L.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccO1cq7L.s:76     .text.HardFault_Handler:0000000000000020 $d
     /tmp/ccO1cq7L.s:81     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccO1cq7L.s:88     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccO1cq7L.s:102    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccO1cq7L.s:109    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccO1cq7L.s:123    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccO1cq7L.s:130    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccO1cq7L.s:144    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccO1cq7L.s:151    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccO1cq7L.s:164    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccO1cq7L.s:171    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccO1cq7L.s:184    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccO1cq7L.s:191    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccO1cq7L.s:204    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccO1cq7L.s:211    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccO1cq7L.s:234    .text.SPI2_IRQHandler:0000000000000000 $t
     /tmp/ccO1cq7L.s:241    .text.SPI2_IRQHandler:0000000000000000 SPI2_IRQHandler
     /tmp/ccO1cq7L.s:261    .text.SPI2_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_I2S_IRQHandler
hi2s2
